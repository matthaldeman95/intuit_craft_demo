#===========================================================================
#
# StrConverter
#
#===========================================================================


***REMOVED***StrConverter module containing class StrConverter.***REMOVED***

#===========================================================================
# Place all imports after here.
#
from __future__ import (absolute_import, division, print_function,
                        unicode_literals***REMOVED***

from matplotlib.externals import six
from matplotlib.externals.six.moves import xrange

import matplotlib.units as units
from matplotlib.cbook import iterable

# Place all imports before here.
#===========================================================================

__all__ = [ 'StrConverter' ***REMOVED***

#===========================================================================
class StrConverter( units.ConversionInterface ***REMOVED***:
   ***REMOVED***: A matplotlib converter class.  Provides matplotlib conversion
        functionality for string data values.

   Valid units for string are:
   - 'indexed' : Values are indexed as they are specified for plotting.
   - 'sorted'  : Values are sorted alphanumerically.
   - 'inverted' : Values are inverted so that the first value is on top.
   - 'sorted-inverted' :  A combination of 'sorted' and 'inverted'
   ***REMOVED***

   #------------------------------------------------------------------------
   @staticmethod
   def axisinfo( unit, axis ***REMOVED***:
      ***REMOVED***: Returns information on how to handle an axis that has string data.

      = INPUT VARIABLES
      - axis    The axis using this converter.
      - unit    The units to use for a axis with string data.

      = RETURN VALUE
      - Returns a matplotlib AxisInfo data structure that contains
        minor/major formatters, major/minor locators, and default
        label information.
      ***REMOVED***

      return None

   #------------------------------------------------------------------------
   @staticmethod
   def convert( value, unit, axis ***REMOVED***:
      ***REMOVED***: Convert value using unit to a float.  If value is a sequence, return
      the converted sequence.

      = INPUT VARIABLES
      - axis    The axis using this converter.
      - value   The value or list of values that need to be converted.
      - unit    The units to use for a axis with Epoch data.

      = RETURN VALUE
      - Returns the value parameter converted to floats.
      ***REMOVED***

      if ( units.ConversionInterface.is_numlike( value ***REMOVED*** ***REMOVED***:
         return value

      if ( value == [***REMOVED*** ***REMOVED***:
         return [***REMOVED***

      # we delay loading to make matplotlib happy
      ax = axis.axes
      if axis is ax.get_xaxis(***REMOVED***:
         isXAxis = True
      else:
         isXAxis = False

      axis.get_major_ticks(***REMOVED***
      ticks = axis.get_ticklocs(***REMOVED***
      labels = axis.get_ticklabels(***REMOVED***

      labels = [ l.get_text(***REMOVED*** for l in labels if l.get_text(***REMOVED*** ***REMOVED***

      if ( not labels ***REMOVED***:
         ticks = [***REMOVED***
         labels = [***REMOVED***


      if ( not iterable( value ***REMOVED*** ***REMOVED***:
         value = [ value ***REMOVED***

      newValues = [***REMOVED***
      for v in value:
         if ( (v not in labels***REMOVED*** and (v not in newValues***REMOVED*** ***REMOVED***:
            newValues.append( v ***REMOVED***

      for v in newValues:
         if ( labels ***REMOVED***:
            labels.append( v ***REMOVED***
         else:
            labels = [ v ***REMOVED***

      #DISABLED: This is disabled because matplotlib bar plots do not
      #DISABLED: recalculate the unit conversion of the data values
      #DISABLED: this is due to design and is not really a bug.
      #DISABLED: If this gets changed, then we can activate the following
      #DISABLED: block of code.  Note that this works for line plots.
      #DISABLED if ( unit ***REMOVED***:
      #DISABLED    if ( unit.find( "sorted" ***REMOVED*** > -1 ***REMOVED***:
      #DISABLED       labels.sort(***REMOVED***
      #DISABLED    if ( unit.find( "inverted" ***REMOVED*** > -1 ***REMOVED***:
      #DISABLED       labels = labels[ ::-1 ***REMOVED***

      # add padding (so they do not appear on the axes themselves***REMOVED***
      labels = [ '' ***REMOVED*** + labels + [ '' ***REMOVED***
      ticks = list(xrange( len(labels***REMOVED*** ***REMOVED******REMOVED***
      ticks[0***REMOVED*** = 0.5
      ticks[-1***REMOVED*** = ticks[-1***REMOVED*** - 0.5

      axis.set_ticks( ticks ***REMOVED***
      axis.set_ticklabels( labels ***REMOVED***
      # we have to do the following lines to make ax.autoscale_view work
      loc = axis.get_major_locator(***REMOVED***
      loc.set_bounds( ticks[0***REMOVED***, ticks[-1***REMOVED*** ***REMOVED***

      if ( isXAxis ***REMOVED***:
         ax.set_xlim( ticks[0***REMOVED***, ticks[-1***REMOVED*** ***REMOVED***
      else:
         ax.set_ylim( ticks[0***REMOVED***, ticks[-1***REMOVED*** ***REMOVED***

      result = [***REMOVED***
      for v in value:
         # If v is not in labels then something went wrong with adding new
         # labels to the list of old labels.
         errmsg  = "This is due to a logic error in the StrConverter class.  "
         errmsg += "Please report this error and its message in bugzilla."
         assert ( v in labels ***REMOVED***, errmsg
         result.append( ticks[ labels.index(v***REMOVED*** ***REMOVED*** ***REMOVED***

      ax.viewLim.ignore(-1***REMOVED***
      return result

   #------------------------------------------------------------------------
   @staticmethod
   def default_units( value, axis ***REMOVED***:
      ***REMOVED***: Return the default unit for value, or None.

      = INPUT VARIABLES
      - axis    The axis using this converter.
      - value   The value or list of values that need units.

      = RETURN VALUE
      - Returns the default units to use for value.
      Return the default unit for value, or None.
      ***REMOVED***

      # The default behavior for string indexing.
      return "indexed"
