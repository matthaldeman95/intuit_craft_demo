from __future__ import (absolute_import, division, print_function,
                        unicode_literals***REMOVED***

from matplotlib.externals import six

import io

import numpy as np
import matplotlib
from matplotlib.testing.decorators import image_comparison, knownfailureif, cleanup
import matplotlib.pyplot as plt
from matplotlib import mathtext

math_tests = [
    r'$a+b+\dot s+\dot{s***REMOVED***+\ldots$',
    r'$x \doteq y$',
    r'\$100.00 $\alpha \_$',
    r'$\frac{\$100.00***REMOVED***{y***REMOVED***$',
    r'$x   y$',
    r'$x+y\ x=y\ x<y\ x:y\ x,y\ x@y$',
    r'$100\%y\ x*y\ x/y x\$y$',
    r'$x\leftarrow y\ x\forall y\ x-y$',
    r'$x \sf x \bf x {\cal X***REMOVED*** \rm x$',
    r'$x\ x\,x\;x\quad x\qquad x\!x\hspace{ 0.5 ***REMOVED***y$',
    r'$\{ \rm braces \***REMOVED***$',
    r'$\left[\left\lfloor\frac{5***REMOVED***{\frac{\left(3\right***REMOVED******REMOVED***{4***REMOVED******REMOVED*** y\right***REMOVED***\right***REMOVED***$',
    r'$\left(x\right***REMOVED***$',
    r'$\sin(x***REMOVED***$',
    r'$x_2$',
    r'$x^2$',
    r'$x^2_y$',
    r'$x_y^2$',
    r'$\prod_{i=\alpha_{i+1***REMOVED******REMOVED***^\infty$',
    r'$x = \frac{x+\frac{5***REMOVED***{2***REMOVED******REMOVED***{\frac{y+3***REMOVED***{8***REMOVED******REMOVED***$',
    r'$dz/dt = \gamma x^2 + {\rm sin***REMOVED***(2\pi y+\phi***REMOVED***$',
    r'Foo: $\alpha_{i+1***REMOVED***^j = {\rm sin***REMOVED***(2\pi f_j t_i***REMOVED*** e^{-5 t_i/\tau***REMOVED***$',
    r'$\mathcal{R***REMOVED***\prod_{i=\alpha_{i+1***REMOVED******REMOVED***^\infty a_i \sin(2 \pi f x_i***REMOVED***$',
    r'Variable $i$ is good',
    r'$\Delta_i^j$',
    r'$\Delta^j_{i+1***REMOVED***$',
    r'$\ddot{o***REMOVED***\acute{e***REMOVED***\grave{e***REMOVED***\hat{O***REMOVED***\breve{\imath***REMOVED***\tilde{n***REMOVED***\vec{q***REMOVED***$',
    r"$\arccos((x^i***REMOVED******REMOVED***$",
    r"$\gamma = \frac{x=\frac{6***REMOVED***{8***REMOVED******REMOVED***{y***REMOVED*** \delta$",
    r'$\limsup_{x\to\infty***REMOVED***$',
    r'$\oint^\infty_0$',
    r"$f'\quad f'''(x***REMOVED***\quad ''/\mathrm{yr***REMOVED***$",
    r'$\frac{x_2888***REMOVED***{y***REMOVED***$',
    r"$\sqrt[3***REMOVED***{\frac{X_2***REMOVED***{Y***REMOVED******REMOVED***=5$",
    r"$\sqrt[5***REMOVED***{\prod^\frac{x***REMOVED***{2\pi^2***REMOVED***_\infty***REMOVED***$",
    r"$\sqrt[3***REMOVED***{x***REMOVED***=5$",
    r'$\frac{X***REMOVED***{\frac{X***REMOVED***{Y***REMOVED******REMOVED***$',
    r"$W^{3\beta***REMOVED***_{\delta_1 \rho_1 \sigma_2***REMOVED*** = U^{3\beta***REMOVED***_{\delta_1 \rho_1***REMOVED*** + \frac{1***REMOVED***{8 \pi 2***REMOVED*** \int^{\alpha_2***REMOVED***_{\alpha_2***REMOVED*** d \alpha^\prime_2 \left[\frac{ U^{2\beta***REMOVED***_{\delta_1 \rho_1***REMOVED*** - \alpha^\prime_2U^{1\beta***REMOVED***_{\rho_1 \sigma_2***REMOVED*** ***REMOVED***{U^{0\beta***REMOVED***_{\rho_1 \sigma_2***REMOVED******REMOVED***\right***REMOVED***$",
    r'$\mathcal{H***REMOVED*** = \int d \tau \left(\epsilon E^2 + \mu H^2\right***REMOVED***$',
    r'$\widehat{abc***REMOVED***\widetilde{def***REMOVED***$',
    '$\\Gamma \\Delta \\Theta \\Lambda \\Xi \\Pi \\Sigma \\Upsilon \\Phi \\Psi \\Omega$',
    '$\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta \\iota \\lambda \\mu \\nu \\xi \\pi \\kappa \\rho \\sigma \\tau \\upsilon \\phi \\chi \\psi$',

    # The examples prefixed by 'mmltt' are from the MathML torture test here:
        # http://www.mozilla.org/projects/mathml/demo/texvsmml.xhtml
    r'${x***REMOVED***^{2***REMOVED***{y***REMOVED***^{2***REMOVED***$',
    r'${***REMOVED***_{2***REMOVED***F_{3***REMOVED***$',
    r'$\frac{x+{y***REMOVED***^{2***REMOVED******REMOVED***{k+1***REMOVED***$',
    r'$x+{y***REMOVED***^{\frac{2***REMOVED***{k+1***REMOVED******REMOVED***$',
    r'$\frac{a***REMOVED***{b/2***REMOVED***$',
    r'${a***REMOVED***_{0***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{1***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{2***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{3***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{4***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$',
    r'${a***REMOVED***_{0***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{1***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{2***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{3***REMOVED***+\frac{1***REMOVED***{{a***REMOVED***_{4***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$',
    r'$\binom{n***REMOVED***{k/2***REMOVED***$',
    r'$\binom{p***REMOVED***{2***REMOVED***{x***REMOVED***^{2***REMOVED***{y***REMOVED***^{p-2***REMOVED***-\frac{1***REMOVED***{1-x***REMOVED***\frac{1***REMOVED***{1-{x***REMOVED***^{2***REMOVED******REMOVED***$',
    r'${x***REMOVED***^{2y***REMOVED***$',
    r'$\sum _{i=1***REMOVED***^{p***REMOVED***\sum _{j=1***REMOVED***^{q***REMOVED***\sum _{k=1***REMOVED***^{r***REMOVED***{a***REMOVED***_{ij***REMOVED***{b***REMOVED***_{jk***REMOVED***{c***REMOVED***_{ki***REMOVED***$',
    r'$\sqrt{1+\sqrt{1+\sqrt{1+\sqrt{1+\sqrt{1+\sqrt{1+\sqrt{1+x***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***$',
    r'$\left(\frac{{\partial ***REMOVED***^{2***REMOVED******REMOVED***{\partial {x***REMOVED***^{2***REMOVED******REMOVED***+\frac{{\partial ***REMOVED***^{2***REMOVED******REMOVED***{\partial {y***REMOVED***^{2***REMOVED******REMOVED***\right***REMOVED***{|\varphi \left(x+iy\right***REMOVED***|***REMOVED***^{2***REMOVED***=0$',
    r'${2***REMOVED***^{{2***REMOVED***^{{2***REMOVED***^{x***REMOVED******REMOVED******REMOVED***$',
    r'${\int ***REMOVED***_{1***REMOVED***^{x***REMOVED***\frac{\mathrm{dt***REMOVED******REMOVED***{t***REMOVED***$',
    r'$\int {\int ***REMOVED***_{D***REMOVED***\mathrm{dx***REMOVED*** \mathrm{dy***REMOVED***$',
    # mathtex doesn't support array
    # 'mmltt18'    : r'$f\left(x\right***REMOVED***=\left\{\begin{array***REMOVED***{cc***REMOVED***\hfill 1/3\hfill & \text{if_***REMOVED***0\le x\le 1;\hfill \\ \hfill 2/3\hfill & \hfill \text{if_***REMOVED***3\le x\le 4;\hfill \\ \hfill 0\hfill & \text{elsewhere.***REMOVED***\hfill \end{array***REMOVED***$',
    # mathtex doesn't support stackrel
    # 'mmltt19'    : ur'$\stackrel{\stackrel{k\text{times***REMOVED******REMOVED***{\ufe37***REMOVED******REMOVED***{x+...+x***REMOVED***$',
    r'${y***REMOVED***_{{x***REMOVED***^{2***REMOVED******REMOVED***$',
    # mathtex doesn't support the "\text" command
    # 'mmltt21'    : r'$\sum _{p\text{\prime***REMOVED******REMOVED***f\left(p\right***REMOVED***={\int ***REMOVED***_{t>1***REMOVED***f\left(t\right***REMOVED*** d\pi \left(t\right***REMOVED***$',
    # mathtex doesn't support array
    # 'mmltt23'    : r'$\left(\begin{array***REMOVED***{cc***REMOVED***\hfill \left(\begin{array***REMOVED***{cc***REMOVED***\hfill a\hfill & \hfill b\hfill \\ \hfill c\hfill & \hfill d\hfill \end{array***REMOVED***\right***REMOVED***\hfill & \hfill \left(\begin{array***REMOVED***{cc***REMOVED***\hfill e\hfill & \hfill f\hfill \\ \hfill g\hfill & \hfill h\hfill \end{array***REMOVED***\right***REMOVED***\hfill \\ \hfill 0\hfill & \hfill \left(\begin{array***REMOVED***{cc***REMOVED***\hfill i\hfill & \hfill j\hfill \\ \hfill k\hfill & \hfill l\hfill \end{array***REMOVED***\right***REMOVED***\hfill \end{array***REMOVED***\right***REMOVED***$',
    # mathtex doesn't support array
    # 'mmltt24'   : u'$det|\\begin{array***REMOVED***{ccccc***REMOVED***\\hfill {c***REMOVED***_{0***REMOVED***\\hfill & \\hfill {c***REMOVED***_{1***REMOVED***\\hfill & \\hfill {c***REMOVED***_{2***REMOVED***\\hfill & \\hfill \\dots \\hfill & \\hfill {c***REMOVED***_{n***REMOVED***\\hfill \\\\ \\hfill {c***REMOVED***_{1***REMOVED***\\hfill & \\hfill {c***REMOVED***_{2***REMOVED***\\hfill & \\hfill {c***REMOVED***_{3***REMOVED***\\hfill & \\hfill \\dots \\hfill & \\hfill {c***REMOVED***_{n+1***REMOVED***\\hfill \\\\ \\hfill {c***REMOVED***_{2***REMOVED***\\hfill & \\hfill {c***REMOVED***_{3***REMOVED***\\hfill & \\hfill {c***REMOVED***_{4***REMOVED***\\hfill & \\hfill \\dots \\hfill & \\hfill {c***REMOVED***_{n+2***REMOVED***\\hfill \\\\ \\hfill \\u22ee\\hfill & \\hfill \\u22ee\\hfill & \\hfill \\u22ee\\hfill & \\hfill \\hfill & \\hfill \\u22ee\\hfill \\\\ \\hfill {c***REMOVED***_{n***REMOVED***\\hfill & \\hfill {c***REMOVED***_{n+1***REMOVED***\\hfill & \\hfill {c***REMOVED***_{n+2***REMOVED***\\hfill & \\hfill \\dots \\hfill & \\hfill {c***REMOVED***_{2n***REMOVED***\\hfill \\end{array***REMOVED***|>0$',
    r'${y***REMOVED***_{{x***REMOVED***_{2***REMOVED******REMOVED***$',
    r'${x***REMOVED***_{92***REMOVED***^{31415***REMOVED***+\pi $',
    r'${x***REMOVED***_{{y***REMOVED***_{b***REMOVED***^{a***REMOVED******REMOVED***^{{z***REMOVED***_{c***REMOVED***^{d***REMOVED******REMOVED***$',
    r'${y***REMOVED***_{3***REMOVED***^{\prime \prime \prime ***REMOVED***$',
    r"$\left( \xi \left( 1 - \xi \right***REMOVED*** \right***REMOVED***$", # Bug 2969451
    r"$\left(2 \, a=b\right***REMOVED***$", # Sage bug #8125
    r"$? ! &$", # github issue #466
    r'$\operatorname{cos***REMOVED*** x$', # github issue #553
    r'$\sum _{\genfrac{***REMOVED***{***REMOVED***{0***REMOVED***{***REMOVED***{0\leq i\leq m***REMOVED***{0<j<n***REMOVED******REMOVED***P\left(i,j\right***REMOVED***$',
    r"$\left\Vert a \right\Vert \left\vert b \right\vert \left| a \right| \left\| b\right\| \Vert a \Vert \vert b \vert$",
    r'$\mathring{A***REMOVED***  \stackrel{\circ***REMOVED***{A***REMOVED***  \AA$',
    r'$M \, M \thinspace M \/ M \> M \: M \; M \ M \enspace M \quad M \qquad M \! M$',
    r'$\Cup$ $\Cap$ $\leftharpoonup$ $\barwedge$ $\rightharpoonup$',
    r'$\dotplus$ $\doteq$ $\doteqdot$ $\ddots$',
    r'$xyz^kx_kx^py^{p-2***REMOVED*** d_i^jb_jc_kd x^j_i E^0 E^0_u$', # github issue #4873
    r'${xyz***REMOVED***^k{x***REMOVED***_{k***REMOVED***{x***REMOVED***^{p***REMOVED***{y***REMOVED***^{p-2***REMOVED*** {d***REMOVED***_{i***REMOVED***^{j***REMOVED***{b***REMOVED***_{j***REMOVED***{c***REMOVED***_{k***REMOVED***{d***REMOVED*** {x***REMOVED***^{j***REMOVED***_{i***REMOVED***{E***REMOVED***^{0***REMOVED***{E***REMOVED***^0_u$',
    r'${\int***REMOVED***_x^x x\oint_x^x x\int_{X***REMOVED***^{X***REMOVED***x\int_x x \int^x x \int_{x***REMOVED*** x\int^{x***REMOVED***{\int***REMOVED***_{x***REMOVED*** x{\int***REMOVED***^{x***REMOVED***_{x***REMOVED***x$',
    r'testing$^{123***REMOVED***$',
    ' '.join('$\\' + p + '$' for p in sorted(mathtext.Parser._snowflake***REMOVED******REMOVED***,
    r'$6-2$; $-2$; $ -2$; ${-2***REMOVED***$; ${  -2***REMOVED***$; $20^{+3***REMOVED***_{-2***REMOVED***$',
    r'$\overline{\omega***REMOVED***^x \frac{1***REMOVED***{2***REMOVED***_0^x$', # github issue #5444
***REMOVED***

digits = "0123456789"
uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
lowercase = "abcdefghijklmnopqrstuvwxyz"
uppergreek = ("\\Gamma \\Delta \\Theta \\Lambda \\Xi \\Pi \\Sigma \\Upsilon \\Phi \\Psi "
              "\\Omega"***REMOVED***
lowergreek = ("\\alpha \\beta \\gamma \\delta \\epsilon \\zeta \\eta \\theta \\iota "
              "\\lambda \\mu \\nu \\xi \\pi \\kappa \\rho \\sigma \\tau \\upsilon "
              "\\phi \\chi \\psi"***REMOVED***
all = [digits, uppercase, lowercase, uppergreek, lowergreek***REMOVED***

font_test_specs = [
    ([***REMOVED***, all***REMOVED***,
    (['mathrm'***REMOVED***, all***REMOVED***,
    (['mathbf'***REMOVED***, all***REMOVED***,
    (['mathit'***REMOVED***, all***REMOVED***,
    (['mathtt'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathcircled'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathrm', 'mathcircled'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathbf', 'mathcircled'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathbb'***REMOVED***, [digits, uppercase, lowercase,
                  r'\Gamma \Pi \Sigma \gamma \pi'***REMOVED******REMOVED***,
    (['mathrm', 'mathbb'***REMOVED***, [digits, uppercase, lowercase,
                            r'\Gamma \Pi \Sigma \gamma \pi'***REMOVED******REMOVED***,
    (['mathbf', 'mathbb'***REMOVED***, [digits, uppercase, lowercase,
                            r'\Gamma \Pi \Sigma \gamma \pi'***REMOVED******REMOVED***,
    (['mathcal'***REMOVED***, [uppercase***REMOVED******REMOVED***,
    (['mathfrak'***REMOVED***, [uppercase, lowercase***REMOVED******REMOVED***,
    (['mathbf', 'mathfrak'***REMOVED***, [uppercase, lowercase***REMOVED******REMOVED***,
    (['mathscr'***REMOVED***, [uppercase, lowercase***REMOVED******REMOVED***,
    (['mathsf'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathrm', 'mathsf'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***,
    (['mathbf', 'mathsf'***REMOVED***, [digits, uppercase, lowercase***REMOVED******REMOVED***
    ***REMOVED***

font_tests = [***REMOVED***
for fonts, chars in font_test_specs:
    wrapper = [' '.join(fonts***REMOVED***, ' $'***REMOVED***
    for font in fonts:
        wrapper.append(r'\%s{' % font***REMOVED***
    wrapper.append('%s'***REMOVED***
    for font in fonts:
        wrapper.append('***REMOVED***'***REMOVED***
    wrapper.append('$'***REMOVED***
    wrapper = ''.join(wrapper***REMOVED***

    for set in chars:
        font_tests.append(wrapper % set***REMOVED***

def make_set(basename, fontset, tests, extensions=None***REMOVED***:
    def make_test(filename, test***REMOVED***:
        @image_comparison(baseline_images=[filename***REMOVED***, extensions=extensions,
                          tol=32***REMOVED***
        def single_test(***REMOVED***:
            matplotlib.rcParams['mathtext.fontset'***REMOVED*** = fontset
            fig = plt.figure(figsize=(5.25, 0.75***REMOVED******REMOVED***
            fig.text(0.5, 0.5, test, horizontalalignment='center', verticalalignment='center'***REMOVED***
        func = single_test
        func.__name__ = str("test_" + filename***REMOVED***
        return func

    # We inject test functions into the global namespace, rather than
    # using a generator, so that individual tests can be run more
    # easily from the commandline and so each test will have its own
    # result.
    for i, test in enumerate(tests***REMOVED***:
        filename = '%s_%s_%02d' % (basename, fontset, i***REMOVED***
        globals(***REMOVED***['test_%s' % filename***REMOVED*** = make_test(filename, test***REMOVED***

make_set('mathtext', 'cm', math_tests***REMOVED***
make_set('mathtext', 'stix', math_tests***REMOVED***
make_set('mathtext', 'stixsans', math_tests***REMOVED***

make_set('mathfont', 'cm', font_tests, ['png'***REMOVED******REMOVED***
make_set('mathfont', 'stix', font_tests, ['png'***REMOVED******REMOVED***
make_set('mathfont', 'stixsans', font_tests, ['png'***REMOVED******REMOVED***

def test_fontinfo(***REMOVED***:
    import matplotlib.font_manager as font_manager
    import matplotlib.ft2font as ft2font
    fontpath = font_manager.findfont("Bitstream Vera Sans"***REMOVED***
    font = ft2font.FT2Font(fontpath***REMOVED***
    table = font.get_sfnt_table("head"***REMOVED***
    assert table['version'***REMOVED*** == (1, 0***REMOVED***

def test_mathtext_exceptions(***REMOVED***:
    errors = [
        (r'$\hspace{***REMOVED***$', r'Expected \hspace{n***REMOVED***'***REMOVED***,
        (r'$\hspace{foo***REMOVED***$', r'Expected \hspace{n***REMOVED***'***REMOVED***,
        (r'$\frac$', r'Expected \frac{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\frac{***REMOVED***{***REMOVED***$', r'Expected \frac{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\stackrel$', r'Expected \stackrel{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\stackrel{***REMOVED***{***REMOVED***$', r'Expected \stackrel{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\binom$', r'Expected \binom{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\binom{***REMOVED***{***REMOVED***$', r'Expected \binom{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\genfrac$', r'Expected \genfrac{ldelim***REMOVED***{rdelim***REMOVED***{rulesize***REMOVED***{style***REMOVED***{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\genfrac{***REMOVED***{***REMOVED***{***REMOVED***{***REMOVED***{***REMOVED***{***REMOVED***$', r'Expected \genfrac{ldelim***REMOVED***{rdelim***REMOVED***{rulesize***REMOVED***{style***REMOVED***{num***REMOVED***{den***REMOVED***'***REMOVED***,
        (r'$\sqrt$', r'Expected \sqrt{value***REMOVED***'***REMOVED***,
        (r'$\sqrt f$', r'Expected \sqrt{value***REMOVED***'***REMOVED***,
        (r'$\overline$', r'Expected \overline{value***REMOVED***'***REMOVED***,
        (r'$\overline{***REMOVED***$', r'Expected \overline{value***REMOVED***'***REMOVED***,
        (r'$\leftF$', r'Expected a delimiter'***REMOVED***,
        (r'$\rightF$', r'Unknown symbol: \rightF'***REMOVED***,
        (r'$\left(\right$', r'Expected a delimiter'***REMOVED***,
        (r'$\left($', r'Expected "\right"'***REMOVED***
        ***REMOVED***

    parser = mathtext.MathTextParser('agg'***REMOVED***

    for math, msg in errors:
        ***REMOVED***
            parser.parse(math***REMOVED***
        except ValueError as e:
            exc = str(e***REMOVED***.split('\n'***REMOVED***
            assert exc[3***REMOVED***.startswith(msg***REMOVED***
        else:
            assert False, "Expected '%s', but didn't get it" % msg

@cleanup
def test_single_minus_sign(***REMOVED***:
    plt.figure(figsize=(0.3, 0.3***REMOVED******REMOVED***
    plt.text(0.5, 0.5, '$-$'***REMOVED***
    for spine in plt.gca(***REMOVED***.spines.values(***REMOVED***:
        spine.set_visible(False***REMOVED***
    plt.gca(***REMOVED***.set_xticks([***REMOVED******REMOVED***
    plt.gca(***REMOVED***.set_yticks([***REMOVED******REMOVED***

    buff = io.BytesIO(***REMOVED***
    plt.savefig(buff, format="rgba", dpi=1000***REMOVED***
    array = np.fromstring(buff.getvalue(***REMOVED***, dtype=np.uint8***REMOVED***

    # If this fails, it would be all white
    assert not np.all(array == 0xff***REMOVED***


if __name__ == '__main__':
    import nose
    nose.runmodule(argv=['-s', '--with-doctest'***REMOVED***, exit=False***REMOVED***
