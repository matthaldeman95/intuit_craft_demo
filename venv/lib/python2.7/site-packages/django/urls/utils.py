from __future__ import unicode_literals

from importlib import import_module

from django.core.exceptions import ViewDoesNotExist
from django.utils import lru_cache, six
from django.utils.module_loading import module_has_submodule


@lru_cache.lru_cache(maxsize=None***REMOVED***
def get_callable(lookup_view***REMOVED***:
    ***REMOVED***
    Return a callable corresponding to lookup_view.
    * If lookup_view is already a callable, return it.
    * If lookup_view is a string import path that can be resolved to a callable,
      import that callable and return it, otherwise raise an exception
      (ImportError or ViewDoesNotExist***REMOVED***.
    ***REMOVED***
    if callable(lookup_view***REMOVED***:
        return lookup_view

    if not isinstance(lookup_view, six.string_types***REMOVED***:
        raise ViewDoesNotExist("'%s' is not a callable or a dot-notation path" % lookup_view***REMOVED***

    mod_name, func_name = get_mod_func(lookup_view***REMOVED***
    if not func_name:  # No '.' in lookup_view
        raise ImportError("Could not import '%s'. The path must be fully qualified." % lookup_view***REMOVED***

    ***REMOVED***
        mod = import_module(mod_name***REMOVED***
    except ImportError:
        parentmod, submod = get_mod_func(mod_name***REMOVED***
        if submod and not module_has_submodule(import_module(parentmod***REMOVED***, submod***REMOVED***:
            raise ViewDoesNotExist(
                "Could not import '%s'. Parent module %s does not exist." %
                (lookup_view, mod_name***REMOVED***
            ***REMOVED***
        else:
            raise
    else:
        ***REMOVED***
            view_func = getattr(mod, func_name***REMOVED***
        except AttributeError:
            raise ViewDoesNotExist(
                "Could not import '%s'. View does not exist in module %s." %
                (lookup_view, mod_name***REMOVED***
            ***REMOVED***
        else:
            if not callable(view_func***REMOVED***:
                raise ViewDoesNotExist(
                    "Could not import '%s.%s'. View is not callable." %
                    (mod_name, func_name***REMOVED***
                ***REMOVED***
            return view_func


def get_mod_func(callback***REMOVED***:
    # Convert 'django.views.news.stories.story_detail' to
    # ['django.views.news.stories', 'story_detail'***REMOVED***
    ***REMOVED***
        dot = callback.rindex('.'***REMOVED***
    except ValueError:
        return callback, ''
    return callback[:dot***REMOVED***, callback[dot + 1:***REMOVED***
