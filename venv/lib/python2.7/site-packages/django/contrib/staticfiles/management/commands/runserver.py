from django.conf import settings
from django.contrib.staticfiles.handlers import StaticFilesHandler
from django.core.management.commands.runserver import \
    Command as RunserverCommand


class Command(RunserverCommand***REMOVED***:
    help = "Starts a lightweight Web server for development and also serves static files."

    def add_arguments(self, parser***REMOVED***:
        super(Command, self***REMOVED***.add_arguments(parser***REMOVED***
        parser.add_argument(
            '--nostatic', action="store_false", dest='use_static_handler', default=True,
            help='Tells Django to NOT automatically serve static files at STATIC_URL.',
        ***REMOVED***
        parser.add_argument(
            '--insecure', action="store_true", dest='insecure_serving', default=False,
            help='Allows serving static files even if DEBUG is False.',
        ***REMOVED***

    def get_handler(self, *args, **options***REMOVED***:
        ***REMOVED***
        Returns the static files serving handler wrapping the default handler,
        if static files should be served. Otherwise just returns the default
        handler.
        ***REMOVED***
        handler = super(Command, self***REMOVED***.get_handler(*args, **options***REMOVED***
        use_static_handler = options['use_static_handler'***REMOVED***
        insecure_serving = options['insecure_serving'***REMOVED***
        if use_static_handler and (settings.DEBUG or insecure_serving***REMOVED***:
            return StaticFilesHandler(handler***REMOVED***
        return handler
