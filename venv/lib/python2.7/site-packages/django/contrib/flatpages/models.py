from __future__ import unicode_literals

from django.contrib.sites.models import Site
from django.db import models
from django.urls import get_script_prefix
from django.utils.encoding import iri_to_uri, python_2_unicode_compatible
from django.utils.translation import ugettext_lazy as _


@python_2_unicode_compatible
class FlatPage(models.Model***REMOVED***:
    url = models.CharField(_('URL'***REMOVED***, max_length=100, db_index=True***REMOVED***
    title = models.CharField(_('title'***REMOVED***, max_length=200***REMOVED***
    content = models.TextField(_('content'***REMOVED***, blank=True***REMOVED***
    enable_comments = models.BooleanField(_('enable comments'***REMOVED***, default=False***REMOVED***
    template_name = models.CharField(
        _('template name'***REMOVED***,
        max_length=70,
        blank=True,
        help_text=_(
            "Example: 'flatpages/contact_page.html'. If this isn't provided, "
            "the system will use 'flatpages/default.html'."
        ***REMOVED***,
    ***REMOVED***
    registration_required = models.BooleanField(
        _('registration required'***REMOVED***,
        help_text=_("If this is checked, only logged-in users will be able to view the page."***REMOVED***,
        default=False,
    ***REMOVED***
    sites = models.ManyToManyField(Site, verbose_name=_('sites'***REMOVED******REMOVED***

    class Meta:
        db_table = 'django_flatpage'
        verbose_name = _('flat page'***REMOVED***
        verbose_name_plural = _('flat pages'***REMOVED***
        ordering = ('url',***REMOVED***

    def __str__(self***REMOVED***:
        return "%s -- %s" % (self.url, self.title***REMOVED***

    def get_absolute_url(self***REMOVED***:
        # Handle script prefix manually because we bypass reverse(***REMOVED***
        return iri_to_uri(get_script_prefix(***REMOVED***.rstrip('/'***REMOVED*** + self.url***REMOVED***
