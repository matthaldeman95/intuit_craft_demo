from django.conf import settings
from django.contrib.messages.storage import default_storage
from django.utils.deprecation import MiddlewareMixin


class MessageMiddleware(MiddlewareMixin***REMOVED***:
    ***REMOVED***
    Middleware that handles temporary messages.
    ***REMOVED***

    def process_request(self, request***REMOVED***:
        request._messages = default_storage(request***REMOVED***

    def process_response(self, request, response***REMOVED***:
        ***REMOVED***
        Updates the storage backend (i.e., saves the messages***REMOVED***.

        If not all messages could not be stored and ``DEBUG`` is ``True``, a
        ``ValueError`` is raised.
        ***REMOVED***
        # A higher middleware layer may return a request which does not contain
        # messages storage, so make no assumption that it will be there.
        if hasattr(request, '_messages'***REMOVED***:
            unstored_messages = request._messages.update(response***REMOVED***
            if unstored_messages and settings.DEBUG:
                raise ValueError('Not all temporary messages could be stored.'***REMOVED***
        return response
