import json

from django import forms
from django.core.exceptions import ValidationError
from django.utils import six
from django.utils.translation import ugettext_lazy as _

__all__ = ['HStoreField'***REMOVED***


class HStoreField(forms.CharField***REMOVED***:
    ***REMOVED***
    A field for HStore data which accepts dictionary JSON input.
    ***REMOVED***
    widget = forms.Textarea
    default_error_messages = {
        'invalid_json': _('Could not load JSON data.'***REMOVED***,
        'invalid_format': _('Input must be a JSON dictionary.'***REMOVED***,
***REMOVED***

    def prepare_value(self, value***REMOVED***:
        if isinstance(value, dict***REMOVED***:
            return json.dumps(value***REMOVED***
        return value

    def to_python(self, value***REMOVED***:
        if not value:
            return {***REMOVED***
        if not isinstance(value, dict***REMOVED***:
            ***REMOVED***
                value = json.loads(value***REMOVED***
            except ValueError:
                raise ValidationError(
                    self.error_messages['invalid_json'***REMOVED***,
                    code='invalid_json',
                ***REMOVED***

        if not isinstance(value, dict***REMOVED***:
            raise ValidationError(
                self.error_messages['invalid_format'***REMOVED***,
                code='invalid_format',
            ***REMOVED***

        # Cast everything to strings for ease.
        for key, val in value.items(***REMOVED***:
            value[key***REMOVED*** = six.text_type(val***REMOVED***
        return value

    def has_changed(self, initial, data***REMOVED***:
        ***REMOVED***
        Return True if data differs from initial.
        ***REMOVED***
        # For purposes of seeing whether something has changed, None is
        # the same as an empty dict, if the data or initial value we get
        # is None, replace it w/ {***REMOVED***.
        initial_value = self.to_python(initial***REMOVED***
        return super(HStoreField, self***REMOVED***.has_changed(initial_value, data***REMOVED***
