from django import template
from django.contrib.admin.utils import quote
from django.urls import Resolver404, get_script_prefix, resolve
from django.utils.http import urlencode
from django.utils.six.moves.urllib.parse import parse_qsl, urlparse, urlunparse

register = template.Library(***REMOVED***


@register.filter
def admin_urlname(value, arg***REMOVED***:
    return 'admin:%s_%s_%s' % (value.app_label, value.model_name, arg***REMOVED***


@register.filter
def admin_urlquote(value***REMOVED***:
    return quote(value***REMOVED***


@register.simple_tag(takes_context=True***REMOVED***
def add_preserved_filters(context, url, popup=False, to_field=None***REMOVED***:
    opts = context.get('opts'***REMOVED***
    preserved_filters = context.get('preserved_filters'***REMOVED***

    parsed_url = list(urlparse(url***REMOVED******REMOVED***
    parsed_qs = dict(parse_qsl(parsed_url[4***REMOVED******REMOVED******REMOVED***
    merged_qs = dict(***REMOVED***

    if opts and preserved_filters:
        preserved_filters = dict(parse_qsl(preserved_filters***REMOVED******REMOVED***

        match_url = '/%s' % url.partition(get_script_prefix(***REMOVED******REMOVED***[2***REMOVED***
        ***REMOVED***
            match = resolve(match_url***REMOVED***
        except Resolver404:
            pass
        else:
            current_url = '%s:%s' % (match.app_name, match.url_name***REMOVED***
            changelist_url = 'admin:%s_%s_changelist' % (opts.app_label, opts.model_name***REMOVED***
            if changelist_url == current_url and '_changelist_filters' in preserved_filters:
                preserved_filters = dict(parse_qsl(preserved_filters['_changelist_filters'***REMOVED******REMOVED******REMOVED***

        merged_qs.update(preserved_filters***REMOVED***

    if popup:
        from django.contrib.admin.options import IS_POPUP_VAR
        merged_qs[IS_POPUP_VAR***REMOVED*** = 1
    if to_field:
        from django.contrib.admin.options import TO_FIELD_VAR
        merged_qs[TO_FIELD_VAR***REMOVED*** = to_field

    merged_qs.update(parsed_qs***REMOVED***

    parsed_url[4***REMOVED*** = urlencode(merged_qs***REMOVED***
    return urlunparse(parsed_url***REMOVED***
