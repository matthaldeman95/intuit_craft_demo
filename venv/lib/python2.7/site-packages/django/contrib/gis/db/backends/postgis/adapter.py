***REMOVED***
 This object provides quoting for GEOS geometries into PostgreSQL/PostGIS.
***REMOVED***
from __future__ import unicode_literals

from psycopg2 import Binary
from psycopg2.extensions import ISQLQuote

from django.contrib.gis.db.backends.postgis.pgraster import to_pgraster
from django.contrib.gis.geometry.backend import Geometry


class PostGISAdapter(object***REMOVED***:
    def __init__(self, obj, geography=False***REMOVED***:
        ***REMOVED***
        Initialize on the spatial object.
        ***REMOVED***
        self.is_geometry = isinstance(obj, (Geometry, PostGISAdapter***REMOVED******REMOVED***

        # Getting the WKB (in string form, to allow easy pickling of
        # the adaptor***REMOVED*** and the SRID from the geometry or raster.
        if self.is_geome***REMOVED***
            self.ewkb = bytes(obj.ewkb***REMOVED***
            self._adapter = Binary(self.ewkb***REMOVED***
        else:
            self.ewkb = to_pgraster(obj***REMOVED***

        self.srid = obj.srid
        self.geography = geography

    def __conform__(self, proto***REMOVED***:
        # Does the given protocol conform to what Psycopg2 expects?
        if proto == ISQLQuote:
            return self
        else:
            raise Exception('Error implementing psycopg2 protocol. Is psycopg2 installed?'***REMOVED***

    def __eq__(self, other***REMOVED***:
        if not isinstance(other, PostGISAdapter***REMOVED***:
            return False
        return (self.ewkb == other.ewkb***REMOVED*** and (self.srid == other.srid***REMOVED***

    def __hash__(self***REMOVED***:
        return hash((self.ewkb, self.srid***REMOVED******REMOVED***

    def __str__(self***REMOVED***:
        return self.getquoted(***REMOVED***

    def prepare(self, conn***REMOVED***:
        ***REMOVED***
        This method allows escaping the binary in the style required by the
        server's `standard_conforming_string` setting.
        ***REMOVED***
        if self.is_geome***REMOVED***
            self._adapter.prepare(conn***REMOVED***

    def getquoted(self***REMOVED***:
        ***REMOVED***
        Return a properly quoted string for use in PostgreSQL/PostGIS.
        ***REMOVED***
        if self.is_geome***REMOVED***
            # Psycopg will figure out whether to use E'\\000' or '\000'.
            return str('%s(%s***REMOVED***' % (
                'ST_GeogFromWKB' if self.geography else 'ST_GeomFromEWKB',
                self._adapter.getquoted(***REMOVED***.decode(***REMOVED******REMOVED***
            ***REMOVED***
        else:
            # For rasters, add explicit type cast to WKB string.
            return "'%s'::raster" % self.ewkb
