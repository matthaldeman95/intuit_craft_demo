import sys

import cx_Oracle

from django.db.backends.oracle.introspection import DatabaseIntrospection
from django.utils import six


class OracleIntrospection(DatabaseIntrospection***REMOVED***:
    # Associating any OBJECTVAR instances with GeometryField.  Of course,
    # this won't work right on Oracle objects that aren't MDSYS.SDO_GEOMETRY,
    # but it is the only object type supported within Django anyways.
    data_types_reverse = DatabaseIntrospection.data_types_reverse.copy(***REMOVED***
    data_types_reverse[cx_Oracle.OBJECT***REMOVED*** = 'GeometryField'

    def get_geometry_type(self, table_name, geo_col***REMOVED***:
        cursor = self.connection.cursor(***REMOVED***
        ***REMOVED***
            # Querying USER_SDO_GEOM_METADATA to get the SRID and dimension information.
            ***REMOVED***
                cursor.execute(
                    'SELECT "DIMINFO", "SRID" FROM "USER_SDO_GEOM_METADATA" '
                    'WHERE "TABLE_NAME"=%s AND "COLUMN_NAME"=%s',
                    (table_name.upper(***REMOVED***, geo_col.upper(***REMOVED******REMOVED***
                ***REMOVED***
                row = cursor.fetchone(***REMOVED***
            except Exception as msg:
                new_msg = (
                    'Could not find entry in USER_SDO_GEOM_METADATA '
                    'corresponding to "%s"."%s"\n'
                    'Error message: %s.'***REMOVED*** % (table_name, geo_col, msg***REMOVED***
                six.reraise(Exception, Exception(new_msg***REMOVED***, sys.exc_info(***REMOVED***[2***REMOVED******REMOVED***

            # TODO: Research way to find a more specific geometry field type for
            # the column's contents.
            field_type = 'GeometryField'

            # Getting the field parameters.
            field_params = {***REMOVED***
            dim, srid = row
            if srid != 4326:
                field_params['srid'***REMOVED*** = srid
            # Length of object array ( SDO_DIM_ARRAY ***REMOVED*** is number of dimensions.
            dim = len(dim***REMOVED***
            if dim != 2:
                field_params['dim'***REMOVED*** = dim
        finally:
            cursor.close(***REMOVED***

        return field_type, field_params
