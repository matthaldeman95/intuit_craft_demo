***REMOVED***
 This module houses the GEOS ctypes prototype functions for the
 unary and binary predicate operations on geometries.
***REMOVED***
from ctypes import c_char, c_char_p, c_double

from django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFactory
from django.contrib.gis.geos.prototypes.errcheck import check_predicate


# ## Binary & unary predicate factories ##
class UnaryPredicate(GEOSFuncFactory***REMOVED***:
    "For GEOS unary predicate functions."
    argtypes = [GEOM_PTR***REMOVED***
    restype = c_char
    errcheck = staticmethod(check_predicate***REMOVED***


class BinaryPredicate(UnaryPredicate***REMOVED***:
    "For GEOS binary predicate functions."
    argtypes = [GEOM_PTR, GEOM_PTR***REMOVED***


# ## Unary Predicates ##
geos_hasz = UnaryPredicate('GEOSHasZ'***REMOVED***
geos_isclosed = UnaryPredicate('GEOSisClosed'***REMOVED***
geos_isempty = UnaryPredicate('GEOSisEmpty'***REMOVED***
geos_isring = UnaryPredicate('GEOSisRing'***REMOVED***
geos_issimple = UnaryPredicate('GEOSisSimple'***REMOVED***
geos_isvalid = UnaryPredicate('GEOSisValid'***REMOVED***

# ## Binary Predicates ##
geos_contains = BinaryPredicate('GEOSContains'***REMOVED***
geos_covers = BinaryPredicate('GEOSCovers'***REMOVED***
geos_crosses = BinaryPredicate('GEOSCrosses'***REMOVED***
geos_disjoint = BinaryPredicate('GEOSDisjoint'***REMOVED***
geos_equals = BinaryPredicate('GEOSEquals'***REMOVED***
geos_equalsexact = BinaryPredicate('GEOSEqualsExact', argtypes=[GEOM_PTR, GEOM_PTR, c_double***REMOVED******REMOVED***
geos_intersects = BinaryPredicate('GEOSIntersects'***REMOVED***
geos_overlaps = BinaryPredicate('GEOSOverlaps'***REMOVED***
geos_relatepattern = BinaryPredicate('GEOSRelatePattern', argtypes=[GEOM_PTR, GEOM_PTR, c_char_p***REMOVED******REMOVED***
geos_touches = BinaryPredicate('GEOSTouches'***REMOVED***
geos_within = BinaryPredicate('GEOSWithin'***REMOVED***
