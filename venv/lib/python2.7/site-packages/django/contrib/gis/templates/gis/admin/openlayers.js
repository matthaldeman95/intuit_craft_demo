{% load l10n %***REMOVED***
OpenLayers.Projection.addTransform("EPSG:4326", "EPSG:3857", OpenLayers.Layer.SphericalMercator.projectForward***REMOVED***;
{% block vars %***REMOVED***var {{ module ***REMOVED******REMOVED*** = {***REMOVED***;
{{ module ***REMOVED******REMOVED***.map = null; {{ module ***REMOVED******REMOVED***.controls = null; {{ module ***REMOVED******REMOVED***.panel = null; {{ module ***REMOVED******REMOVED***.re = new RegExp("^SRID=\\d+;(.+***REMOVED***", "i"***REMOVED***; {{ module ***REMOVED******REMOVED***.layers = {***REMOVED***;
{{ module ***REMOVED******REMOVED***.modifiable = {{ modifiable|yesno:"true,false" ***REMOVED******REMOVED***;
{{ module ***REMOVED******REMOVED***.wkt_f = new OpenLayers.Format.WKT(***REMOVED***;
{{ module ***REMOVED******REMOVED***.is_collection = {{ is_collection|yesno:"true,false" ***REMOVED******REMOVED***;
{{ module ***REMOVED******REMOVED***.collection_type = '{{ collection_type ***REMOVED******REMOVED***';
{{ module ***REMOVED******REMOVED***.is_generic = {{ is_generic|yesno:"true,false" ***REMOVED******REMOVED***;
{{ module ***REMOVED******REMOVED***.is_linestring = {{ is_linestring|yesno:"true,false" ***REMOVED******REMOVED***;
{{ module ***REMOVED******REMOVED***.is_polygon = {{ is_polygon|yesno:"true,false" ***REMOVED******REMOVED***;
{{ module ***REMOVED******REMOVED***.is_point = {{ is_point|yesno:"true,false" ***REMOVED******REMOVED***;
{% endblock %***REMOVED***
{{ module ***REMOVED******REMOVED***.get_ewkt = function(feat***REMOVED***{
    return 'SRID={{ srid|unlocalize ***REMOVED******REMOVED***;' + {{ module ***REMOVED******REMOVED***.wkt_f.write(feat***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.read_wkt = function(wkt***REMOVED***{
    // OpenLayers cannot handle EWKT -- we make sure to strip it out.
    // EWKT is only exposed to OL if there's a validation error in the admin.
    var match = {{ module ***REMOVED******REMOVED***.re.exec(wkt***REMOVED***;
    if (match***REMOVED***{wkt = match[1***REMOVED***;***REMOVED***
    return {{ module ***REMOVED******REMOVED***.wkt_f.read(wkt***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.write_wkt = function(feat***REMOVED***{
    if ({{ module ***REMOVED******REMOVED***.is_collection***REMOVED***{ {{ module ***REMOVED******REMOVED***.num_geom = feat.geometry.components.length;***REMOVED***
    else { {{ module ***REMOVED******REMOVED***.num_geom = 1;***REMOVED***
    document.getElementById('{{ id ***REMOVED******REMOVED***'***REMOVED***.value = {{ module ***REMOVED******REMOVED***.get_ewkt(feat***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.add_wkt = function(event***REMOVED***{
    // This function will sync the contents of the `vector` layer with the
    // WKT in the text field.
    if ({{ module ***REMOVED******REMOVED***.is_collection***REMOVED***{
        var feat = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.{{ geom_type ***REMOVED******REMOVED***(***REMOVED******REMOVED***;
        for (var i = 0; i < {{ module ***REMOVED******REMOVED***.layers.vector.features.length; i++***REMOVED***{
            feat.geometry.addComponents([{{ module ***REMOVED******REMOVED***.layers.vector.features[i***REMOVED***.geometry***REMOVED******REMOVED***;
    ***REMOVED***
    ***REMOVED***{ module ***REMOVED******REMOVED***.write_wkt(feat***REMOVED***;
***REMOVED*** else {
        // Make sure to remove any previously added features.
        if ({{ module ***REMOVED******REMOVED***.layers.vector.features.length > 1***REMOVED***{
            old_feats = [{{ module ***REMOVED******REMOVED***.layers.vector.features[0***REMOVED******REMOVED***;
        ***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.removeFeatures(old_feats***REMOVED***;
        ***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.destroyFeatures(old_feats***REMOVED***;
    ***REMOVED***
    ***REMOVED***{ module ***REMOVED******REMOVED***.write_wkt(event.feature***REMOVED***;
***REMOVED***
***REMOVED***;
{{ module ***REMOVED******REMOVED***.modify_wkt = function(event***REMOVED***{
    if ({{ module ***REMOVED******REMOVED***.is_collection***REMOVED***{
        if ({{ module ***REMOVED******REMOVED***.is_point***REMOVED***{
        ***REMOVED***{ module ***REMOVED******REMOVED***.add_wkt(event***REMOVED***;
            return;
    ***REMOVED*** else {
            // When modifying the selected components are added to the
            // vector layer so we only increment to the `num_geom` value.
            var feat = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.{{ geom_type ***REMOVED******REMOVED***(***REMOVED******REMOVED***;
            for (var i = 0; i < {{ module ***REMOVED******REMOVED***.num_geom; i++***REMOVED***{
                feat.geometry.addComponents([{{ module ***REMOVED******REMOVED***.layers.vector.features[i***REMOVED***.geometry***REMOVED******REMOVED***;
        ***REMOVED***
        ***REMOVED***{ module ***REMOVED******REMOVED***.write_wkt(feat***REMOVED***;
    ***REMOVED***
***REMOVED*** else {
    ***REMOVED***{ module ***REMOVED******REMOVED***.write_wkt(event.feature***REMOVED***;
***REMOVED***
***REMOVED***;
// Function to clear vector features and purge wkt from div
{{ module ***REMOVED******REMOVED***.deleteFeatures = function(***REMOVED***{
***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.removeFeatures({{ module ***REMOVED******REMOVED***.layers.vector.features***REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.destroyFeatures(***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.clearFeatures = function (***REMOVED***{
***REMOVED***{ module ***REMOVED******REMOVED***.deleteFeatures(***REMOVED***;
    document.getElementById('{{ id ***REMOVED******REMOVED***'***REMOVED***.value = '';
***REMOVED***% localize off %***REMOVED***
***REMOVED***{ module ***REMOVED******REMOVED***.map.setCenter(new OpenLayers.LonLat({{ default_lon ***REMOVED******REMOVED***, {{ default_lat ***REMOVED******REMOVED******REMOVED***, {{ default_zoom ***REMOVED******REMOVED******REMOVED***;
***REMOVED***% endlocalize %***REMOVED***
***REMOVED***;
// Add Select control
{{ module ***REMOVED******REMOVED***.addSelectControl = function(***REMOVED***{
    var select = new OpenLayers.Control.SelectFeature({{ module ***REMOVED******REMOVED***.layers.vector, {'toggle' : true, 'clickout' : true***REMOVED******REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.map.addControl(select***REMOVED***;
    select.activate(***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.enableDrawing = function(***REMOVED***{
***REMOVED***{ module ***REMOVED******REMOVED***.map.getControlsByClass('OpenLayers.Control.DrawFeature'***REMOVED***[0***REMOVED***.activate(***REMOVED***;
***REMOVED***;
{{ module ***REMOVED******REMOVED***.enableEditing = function(***REMOVED***{
***REMOVED***{ module ***REMOVED******REMOVED***.map.getControlsByClass('OpenLayers.Control.ModifyFeature'***REMOVED***[0***REMOVED***.activate(***REMOVED***;
***REMOVED***;
// Create an array of controls based on geometry type
{{ module ***REMOVED******REMOVED***.getControls = function(lyr***REMOVED***{
***REMOVED***{ module ***REMOVED******REMOVED***.panel = new OpenLayers.Control.Panel({'displayClass': 'olControlEditingToolbar'***REMOVED******REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.controls = [new OpenLayers.Control.Navigation(***REMOVED******REMOVED***;
    if (!{{ module ***REMOVED******REMOVED***.modifiable && lyr.features.length***REMOVED*** return;
    if ({{ module ***REMOVED******REMOVED***.is_linestring || {{ module ***REMOVED******REMOVED***.is_generic***REMOVED***{
    ***REMOVED***{ module ***REMOVED******REMOVED***.controls.push(new OpenLayers.Control.DrawFeature(lyr, OpenLayers.Handler.Path, {'displayClass': 'olControlDrawFeaturePath'***REMOVED******REMOVED******REMOVED***;
***REMOVED***
    if ({{ module ***REMOVED******REMOVED***.is_polygon || {{ module ***REMOVED******REMOVED***.is_generic***REMOVED***{
    ***REMOVED***{ module ***REMOVED******REMOVED***.controls.push(new OpenLayers.Control.DrawFeature(lyr, OpenLayers.Handler.Polygon, {'displayClass': 'olControlDrawFeaturePolygon'***REMOVED******REMOVED******REMOVED***;
***REMOVED***
    if ({{ module ***REMOVED******REMOVED***.is_point || {{ module ***REMOVED******REMOVED***.is_generic***REMOVED***{
    ***REMOVED***{ module ***REMOVED******REMOVED***.controls.push(new OpenLayers.Control.DrawFeature(lyr, OpenLayers.Handler.Point, {'displayClass': 'olControlDrawFeaturePoint'***REMOVED******REMOVED******REMOVED***;
***REMOVED***
    if ({{ module ***REMOVED******REMOVED***.modifiable***REMOVED***{
    ***REMOVED***{ module ***REMOVED******REMOVED***.controls.push(new OpenLayers.Control.ModifyFeature(lyr, {'displayClass': 'olControlModifyFeature'***REMOVED******REMOVED******REMOVED***;
***REMOVED***
***REMOVED***;
{{ module ***REMOVED******REMOVED***.init = function(***REMOVED***{
***REMOVED***% block map_options %***REMOVED***// The options hash, w/ zoom, resolution, and projection settings.
    var options = {
{% autoescape off %***REMOVED***{% for item in map_options.items %***REMOVED***      '{{ item.0 ***REMOVED******REMOVED***' : {{ item.1 ***REMOVED******REMOVED***{% if not forloop.last %***REMOVED***,{% endif %***REMOVED***
{% endfor %***REMOVED***{% endautoescape %***REMOVED******REMOVED***;{% endblock %***REMOVED***
    // The admin map for this geometry field.
***REMOVED***% block map_creation %***REMOVED***
***REMOVED***{ module ***REMOVED******REMOVED***.map = new OpenLayers.Map('{{ id ***REMOVED******REMOVED***_map', options***REMOVED***;
    // Base Layer
***REMOVED***{ module ***REMOVED******REMOVED***.layers.base = {% block base_layer %***REMOVED***new OpenLayers.Layer.WMS("{{ wms_name ***REMOVED******REMOVED***", "{{ wms_url ***REMOVED******REMOVED***", {layers: '{{ wms_layer ***REMOVED******REMOVED***'{{ wms_options|safe ***REMOVED******REMOVED******REMOVED******REMOVED***;{% endblock %***REMOVED***
***REMOVED***{ module ***REMOVED******REMOVED***.map.addLayer({{ module ***REMOVED******REMOVED***.layers.base***REMOVED***;
***REMOVED***% endblock %***REMOVED***
***REMOVED***% block extra_layers %***REMOVED***{% endblock %***REMOVED***
***REMOVED***% if is_linestring %***REMOVED***OpenLayers.Feature.Vector.style["default"***REMOVED***["strokeWidth"***REMOVED*** = 3; // Default too thin for linestrings. {% endif %***REMOVED***
***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector = new OpenLayers.Layer.Vector(" {{ field_name ***REMOVED******REMOVED***"***REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.map.addLayer({{ module ***REMOVED******REMOVED***.layers.vector***REMOVED***;
    // Read WKT from the text field.
    var wkt = document.getElementById('{{ id ***REMOVED******REMOVED***'***REMOVED***.value;
    if (wkt***REMOVED***{
        // After reading into geometry, immediately write back to
        // WKT <textarea> as EWKT (so that SRID is included***REMOVED***.
        var admin_geom = {{ module ***REMOVED******REMOVED***.read_wkt(wkt***REMOVED***;
    ***REMOVED***{ module ***REMOVED******REMOVED***.write_wkt(admin_geom***REMOVED***;
        if ({{ module ***REMOVED******REMOVED***.is_collection***REMOVED***{
            // If geometry collection, add each component individually so they may be
            // edited individually.
            for (var i = 0; i < {{ module ***REMOVED******REMOVED***.num_geom; i++***REMOVED***{
            ***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.addFeatures([new OpenLayers.Feature.Vector(admin_geom.geometry.components[i***REMOVED***.clone(***REMOVED******REMOVED******REMOVED******REMOVED***;
        ***REMOVED***
    ***REMOVED*** else {
        ***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.addFeatures([admin_geom***REMOVED******REMOVED***;
    ***REMOVED***
        // Zooming to the bounds.
    ***REMOVED***{ module ***REMOVED******REMOVED***.map.zoomToExtent(admin_geom.geometry.getBounds(***REMOVED******REMOVED***;
        if ({{ module ***REMOVED******REMOVED***.is_point***REMOVED***{
        ***REMOVED***{ module ***REMOVED******REMOVED***.map.zoomTo({{ point_zoom ***REMOVED******REMOVED******REMOVED***;
    ***REMOVED***
***REMOVED*** else {
    ***REMOVED***% localize off %***REMOVED***
    ***REMOVED***{ module ***REMOVED******REMOVED***.map.setCenter(new OpenLayers.LonLat({{ default_lon ***REMOVED******REMOVED***, {{ default_lat ***REMOVED******REMOVED******REMOVED***, {{ default_zoom ***REMOVED******REMOVED******REMOVED***;
    ***REMOVED***% endlocalize %***REMOVED***
***REMOVED***
    // This allows editing of the geographic fields -- the modified WKT is
    // written back to the content field (as EWKT, so that the ORM will know
    // to transform back to original SRID***REMOVED***.
***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.events.on({"featuremodified" : {{ module ***REMOVED******REMOVED***.modify_wkt***REMOVED******REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.layers.vector.events.on({"featureadded" : {{ module ***REMOVED******REMOVED***.add_wkt***REMOVED******REMOVED***;
***REMOVED***% block controls %***REMOVED***
    // Map controls:
    // Add geometry specific panel of toolbar controls
***REMOVED***{ module ***REMOVED******REMOVED***.getControls({{ module ***REMOVED******REMOVED***.layers.vector***REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.panel.addControls({{ module ***REMOVED******REMOVED***.controls***REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.map.addControl({{ module ***REMOVED******REMOVED***.panel***REMOVED***;
***REMOVED***{ module ***REMOVED******REMOVED***.addSelectControl(***REMOVED***;
    // Then add optional visual controls
***REMOVED***% if mouse_position %***REMOVED***{{ module ***REMOVED******REMOVED***.map.addControl(new OpenLayers.Control.MousePosition(***REMOVED******REMOVED***;{% endif %***REMOVED***
***REMOVED***% if scale_text %***REMOVED***{{ module ***REMOVED******REMOVED***.map.addControl(new OpenLayers.Control.Scale(***REMOVED******REMOVED***;{% endif %***REMOVED***
***REMOVED***% if layerswitcher %***REMOVED***{{ module ***REMOVED******REMOVED***.map.addControl(new OpenLayers.Control.LayerSwitcher(***REMOVED******REMOVED***;{% endif %***REMOVED***
    // Then add optional behavior controls
***REMOVED***% if not scrollable %***REMOVED***{{ module ***REMOVED******REMOVED***.map.getControlsByClass('OpenLayers.Control.Navigation'***REMOVED***[0***REMOVED***.disableZoomWheel(***REMOVED***;{% endif %***REMOVED***
***REMOVED***% endblock %***REMOVED***
    if (wkt***REMOVED***{
        if ({{ module ***REMOVED******REMOVED***.modifiable***REMOVED***{
        ***REMOVED***{ module ***REMOVED******REMOVED***.enableEditing(***REMOVED***;
    ***REMOVED***
***REMOVED*** else {
    ***REMOVED***{ module ***REMOVED******REMOVED***.enableDrawing(***REMOVED***;
***REMOVED***
***REMOVED***;
