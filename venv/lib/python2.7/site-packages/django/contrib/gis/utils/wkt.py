***REMOVED***
 Utilities for manipulating Geometry WKT.
***REMOVED***
import warnings

from django.utils import six
from django.utils.deprecation import RemovedInDjango20Warning


def precision_wkt(geom, prec***REMOVED***:
    ***REMOVED***
    Returns WKT text of the geometry according to the given precision (an
    integer or a string***REMOVED***.  If the precision is an integer, then the decimal
    places of coordinates WKT will be truncated to that number:

     >>> from django.contrib.gis.geos import Point
     >>> pnt = Point(5, 23***REMOVED***
     >>> pnt.wkt
     'POINT (5.0000000000000000 23.0000000000000000***REMOVED***'
     >>> precision_wkt(pnt, 1***REMOVED***
     'POINT (5.0 23.0***REMOVED***'

    If the precision is a string, it must be valid Python format string
    (e.g., '%20.7f'***REMOVED*** -- thus, you should know what you're doing.
    ***REMOVED***
    warnings.warn(
        "precision_wkt(***REMOVED*** is deprecated in favor of the WKTWriter class.",
        RemovedInDjango20Warning, stacklevel=2
    ***REMOVED***

    if isinstance(prec, int***REMOVED***:
        num_fmt = '%%.%df' % prec
    elif isinstance(prec, six.string_types***REMOVED***:
        num_fmt = prec
    else:
        raise TypeError

    # TODO: Support 3D geometries.
    coord_fmt = ' '.join([num_fmt, num_fmt***REMOVED******REMOVED***

    def formatted_coords(coords***REMOVED***:
        return ','.join(coord_fmt % c[:2***REMOVED*** for c in coords***REMOVED***

    def formatted_poly(poly***REMOVED***:
        return ','.join('(%s***REMOVED***' % formatted_coords(r***REMOVED*** for r in poly***REMOVED***

    def formatted_geom(g***REMOVED***:
        gtype = str(g.geom_type***REMOVED***.upper(***REMOVED***
        yield '%s(' % gtype
        if gtype == 'POINT':
            yield formatted_coords((g.coords,***REMOVED******REMOVED***
        elif gtype in ('LINESTRING', 'LINEARRING'***REMOVED***:
            yield formatted_coords(g.coords***REMOVED***
        elif gtype in ('POLYGON', 'MULTILINESTRING'***REMOVED***:
            yield formatted_poly(g***REMOVED***
        elif gtype == 'MULTIPOINT':
            yield formatted_coords(g.coords***REMOVED***
        elif gtype == 'MULTIPOLYGON':
            yield ','.join('(%s***REMOVED***' % formatted_poly(p***REMOVED*** for p in g***REMOVED***
        elif gtype == 'GEOMETRYCOLLECTION':
            yield ','.join(''.join(wkt for wkt in formatted_geom(child***REMOVED******REMOVED*** for child in g***REMOVED***
        else:
            raise TypeError
        yield '***REMOVED***'

    return ''.join(wkt for wkt in formatted_geom(geom***REMOVED******REMOVED***
