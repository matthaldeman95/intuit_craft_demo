# Wrapper for loading templates from eggs via pkg_resources.resource_string.
from __future__ import unicode_literals

import warnings

from django.apps import apps
from django.template import Origin, TemplateDoesNotExist
from django.utils import six
from django.utils.deprecation import RemovedInDjango20Warning

from .base import Loader as BaseLoader

***REMOVED***
    from pkg_resources import resource_string
except ImportError:
    resource_string = None

warnings.warn('The egg template loader is deprecated.', RemovedInDjango20Warning***REMOVED***


class EggOrigin(Origin***REMOVED***:

    def __init__(self, app_name, pkg_name, *args, **kwargs***REMOVED***:
        self.app_name = app_name
        self.pkg_name = pkg_name
        super(EggOrigin, self***REMOVED***.__init__(*args, **kwargs***REMOVED***


class Loader(BaseLoader***REMOVED***:

    def __init__(self, engine***REMOVED***:
        if resource_string is None:
            raise RuntimeError("Setuptools must be installed to use the egg loader"***REMOVED***
        super(Loader, self***REMOVED***.__init__(engine***REMOVED***

    def get_contents(self, origin***REMOVED***:
        ***REMOVED***
            source = resource_string(origin.app_name, origin.pkg_name***REMOVED***
        except Exception:
            raise TemplateDoesNotExist(origin***REMOVED***

        if six.PY2:
            source = source.decode(self.engine.file_charset***REMOVED***

        return source

    def get_template_sources(self, template_name***REMOVED***:
        pkg_name = 'templates/' + template_name
        for app_config in apps.get_app_configs(***REMOVED***:
            yield EggOrigin(
                app_name=app_config.name,
                pkg_name=pkg_name,
                name="egg:%s:%s" % (app_config.name, pkg_name***REMOVED***,
                template_name=template_name,
                loader=self,
            ***REMOVED***

    def load_template_source(self, template_name, template_dirs=None***REMOVED***:
        ***REMOVED***
        Loads templates from Python eggs via pkg_resource.resource_string.

        For every installed app, it tries to get the resource (app, template_name***REMOVED***.
        ***REMOVED***
        warnings.warn(
            'The load_template_sources(***REMOVED*** method is deprecated. Use '
            'get_template(***REMOVED*** or get_contents(***REMOVED*** instead.',
            RemovedInDjango20Warning,
        ***REMOVED***
        for origin in self.get_template_sources(template_name***REMOVED***:
            ***REMOVED***
                return self.get_contents(origin***REMOVED***, origin.name
            except TemplateDoesNotExist:
                pass
        raise TemplateDoesNotExist(template_name***REMOVED***
