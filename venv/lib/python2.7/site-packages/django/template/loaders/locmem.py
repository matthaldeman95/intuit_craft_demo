***REMOVED***
Wrapper for loading templates from a plain Python dict.
***REMOVED***

import warnings

from django.template import Origin, TemplateDoesNotExist
from django.utils.deprecation import RemovedInDjango20Warning

from .base import Loader as BaseLoader


class Loader(BaseLoader***REMOVED***:

    def __init__(self, engine, templates_dict***REMOVED***:
        self.templates_dict = templates_dict
        super(Loader, self***REMOVED***.__init__(engine***REMOVED***

    def get_contents(self, origin***REMOVED***:
        ***REMOVED***
            return self.templates_dict[origin.name***REMOVED***
        except KeyError:
            raise TemplateDoesNotExist(origin***REMOVED***

    def get_template_sources(self, template_name***REMOVED***:
        yield Origin(
            name=template_name,
            template_name=template_name,
            loader=self,
        ***REMOVED***

    def load_template_source(self, template_name, template_dirs=None***REMOVED***:
        warnings.warn(
            'The load_template_sources(***REMOVED*** method is deprecated. Use '
            'get_template(***REMOVED*** or get_contents(***REMOVED*** instead.',
            RemovedInDjango20Warning,
        ***REMOVED***
        ***REMOVED***
            return self.templates_dict[template_name***REMOVED***, template_name
        except KeyError:
            raise TemplateDoesNotExist(template_name***REMOVED***
