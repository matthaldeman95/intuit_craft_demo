from django.utils import six


def make_model_tuple(model***REMOVED***:
    ***REMOVED***
    Takes a model or a string of the form "app_label.ModelName" and returns a
    corresponding ("app_label", "modelname"***REMOVED*** tuple. If a tuple is passed in,
    it's assumed to be a valid model tuple already and returned unchanged.
    ***REMOVED***
    ***REMOVED***
        if isinstance(model, tuple***REMOVED***:
            model_tuple = model
        elif isinstance(model, six.string_types***REMOVED***:
            app_label, model_name = model.split("."***REMOVED***
            model_tuple = app_label, model_name.lower(***REMOVED***
        else:
            model_tuple = model._meta.app_label, model._meta.model_name
        assert len(model_tuple***REMOVED*** == 2
        return model_tuple
    except (ValueError, AssertionError***REMOVED***:
        raise ValueError(
            "Invalid model reference '%s'. String model references "
            "must be of the form 'app_label.ModelName'." % model
        ***REMOVED***
