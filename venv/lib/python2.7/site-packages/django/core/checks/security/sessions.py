from django.conf import settings

from .. import Tags, Warning, register
from ..utils import patch_middleware_message


def add_session_cookie_message(message***REMOVED***:
    return message + (
        " Using a secure-only session cookie makes it more difficult for "
        "network traffic sniffers to hijack user sessions."
    ***REMOVED***

W010 = Warning(
    add_session_cookie_message(
        "You have 'django.contrib.sessions' in your INSTALLED_APPS, "
        "but you have not set SESSION_COOKIE_SECURE to True."
    ***REMOVED***,
    id='security.W010',
***REMOVED***

W011 = Warning(
    add_session_cookie_message(
        "You have 'django.contrib.sessions.middleware.SessionMiddleware' "
        "in your MIDDLEWARE, but you have not set "
        "SESSION_COOKIE_SECURE to True."
    ***REMOVED***,
    id='security.W011',
***REMOVED***

W012 = Warning(
    add_session_cookie_message("SESSION_COOKIE_SECURE is not set to True."***REMOVED***,
    id='security.W012',
***REMOVED***


def add_httponly_message(message***REMOVED***:
    return message + (
        " Using an HttpOnly session cookie makes it more difficult for "
        "cross-site scripting attacks to hijack user sessions."
    ***REMOVED***


W013 = Warning(
    add_httponly_message(
        "You have 'django.contrib.sessions' in your INSTALLED_APPS, "
        "but you have not set SESSION_COOKIE_HTTPONLY to True.",
    ***REMOVED***,
    id='security.W013',
***REMOVED***

W014 = Warning(
    add_httponly_message(
        "You have 'django.contrib.sessions.middleware.SessionMiddleware' "
        "in your MIDDLEWARE, but you have not set "
        "SESSION_COOKIE_HTTPONLY to True."
    ***REMOVED***,
    id='security.W014',
***REMOVED***

W015 = Warning(
    add_httponly_message("SESSION_COOKIE_HTTPONLY is not set to True."***REMOVED***,
    id='security.W015',
***REMOVED***


@register(Tags.security, deploy=True***REMOVED***
def check_session_cookie_secure(app_configs, **kwargs***REMOVED***:
    errors = [***REMOVED***
    if not settings.SESSION_COOKIE_SECURE:
        if _session_app(***REMOVED***:
            errors.append(W010***REMOVED***
        if _session_middleware(***REMOVED***:
            errors.append(patch_middleware_message(W011***REMOVED******REMOVED***
        if len(errors***REMOVED*** > 1:
            errors = [W012***REMOVED***
    return errors


@register(Tags.security, deploy=True***REMOVED***
def check_session_cookie_httponly(app_configs, **kwargs***REMOVED***:
    errors = [***REMOVED***
    if not settings.SESSION_COOKIE_HTTPONLY:
        if _session_app(***REMOVED***:
            errors.append(W013***REMOVED***
        if _session_middleware(***REMOVED***:
            errors.append(patch_middleware_message(W014***REMOVED******REMOVED***
        if len(errors***REMOVED*** > 1:
            errors = [W015***REMOVED***
    return errors


def _session_middleware(***REMOVED***:
    return ("django.contrib.sessions.middleware.SessionMiddleware" in settings.MIDDLEWARE_CLASSES or
            settings.MIDDLEWARE and "django.contrib.sessions.middleware.SessionMiddleware" in settings.MIDDLEWARE***REMOVED***


def _session_app(***REMOVED***:
    return "django.contrib.sessions" in settings.INSTALLED_APPS
