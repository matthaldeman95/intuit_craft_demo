***REMOVED***
import sys

from django.conf import settings
from django.core.management.base import BaseCommand
from django.test.utils import get_runner


class Command(BaseCommand***REMOVED***:
    help = 'Discover and run tests in the specified modules or the current directory.'

    requires_system_checks = False

    def __init__(self***REMOVED***:
        self.test_runner = None
        super(Command, self***REMOVED***.__init__(***REMOVED***

    def run_from_argv(self, argv***REMOVED***:
        ***REMOVED***
        Pre-parse the command line to extract the value of the --testrunner
        option. This allows a test runner to define additional command line
        arguments.
        ***REMOVED***
        option = '--testrunner='
        for arg in argv[2:***REMOVED***:
            if arg.startswith(option***REMOVED***:
                self.test_runner = arg[len(option***REMOVED***:***REMOVED***
                break
        super(Command, self***REMOVED***.run_from_argv(argv***REMOVED***

    def add_arguments(self, parser***REMOVED***:
        parser.add_argument(
            'args', metavar='test_label', nargs='*',
            help='Module paths to test; can be modulename, modulename.TestCase or modulename.TestCase.test_method'
        ***REMOVED***
        parser.add_argument(
            '--noinput', '--no-input', action='store_false', dest='interactive', default=True,
            help='Tells Django to NOT prompt the user for input of any kind.',
        ***REMOVED***
        parser.add_argument(
            '--failfast', action='store_true', dest='failfast', default=False,
            help='Tells Django to stop running the test suite after first failed test.',
        ***REMOVED***
        parser.add_argument(
            '--testrunner', action='store', dest='testrunner',
            help='Tells Django to use specified test runner class instead of '
                 'the one specified by the TEST_RUNNER setting.',
        ***REMOVED***
        parser.add_argument(
            '--liveserver', action='store', dest='liveserver', default=None,
            help='Overrides the default address where the live server (used '
                 'with LiveServerTestCase***REMOVED*** is expected to run from. The '
                 'default value is localhost:8081-8179.',
        ***REMOVED***

        test_runner_class = get_runner(settings, self.test_runner***REMOVED***

        if hasattr(test_runner_class, 'add_arguments'***REMOVED***:
            test_runner_class.add_arguments(parser***REMOVED***

    def handle(self, *test_labels, **options***REMOVED***:
        from django.conf import settings
        from django.test.utils import get_runner

        TestRunner = get_runner(settings, options['testrunner'***REMOVED******REMOVED***

        if options['liveserver'***REMOVED*** is not None:
            os.environ['DJANGO_LIVE_TEST_SERVER_ADDRESS'***REMOVED*** = options['liveserver'***REMOVED***
        del options['liveserver'***REMOVED***

        test_runner = TestRunner(**options***REMOVED***
        failures = test_runner.run_tests(test_labels***REMOVED***

        if failures:
            sys.exit(bool(failures***REMOVED******REMOVED***
