# -*- coding: utf-8 -*-
***REMOVED***
Default Django settings. Override these with settings in the module pointed to
by the DJANGO_SETTINGS_MODULE environment variable.
***REMOVED***
from __future__ import unicode_literals


# This is defined here as a do-nothing function because we can't import
# django.utils.translation -- that module depends on the settings.
def gettext_noop(s***REMOVED***:
    return s

####################
# CORE             #
####################

DEBUG = False

# Whether the framework should propagate raw exceptions rather than catching
# them. This is useful under some testing situations and should never be used
# on a live site.
DEBUG_PROPAGATE_EXCEPTIONS = False

# Whether to use the "ETag" header. This saves bandwidth but slows down performance.
USE_ETAGS = False

# People who get code error notifications.
# In the format [('Full Name', 'email@example.com'***REMOVED***, ('Full Name', 'anotheremail@example.com'***REMOVED******REMOVED***
ADMINS = [***REMOVED***

# List of IP addresses, as strings, that:
#   * See debug comments, when DEBUG is true
#   * Receive x-headers
INTERNAL_IPS = [***REMOVED***

# Hosts/domain names that are valid for this site.
# "*" matches anything, ".example.com" matches example.com and all subdomains
***REMOVED***

# Local time zone for this installation. All choices can be found here:
# https://en.wikipedia.org/wiki/List_of_tz_zones_by_name (although not all
# systems may support all possibilities***REMOVED***. When USE_TZ is True, this is
# interpreted as the default user time zone.
TIME_ZONE = 'America/Chicago'

# If you set this to True, Django will use timezone-aware datetimes.
USE_TZ = False

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
***REMOVED***

# Languages we provide translations for, out of the box.
LANGUAGES = [
    ('af', gettext_noop('Afrikaans'***REMOVED******REMOVED***,
    ('ar', gettext_noop('Arabic'***REMOVED******REMOVED***,
    ('ast', gettext_noop('Asturian'***REMOVED******REMOVED***,
    ('az', gettext_noop('Azerbaijani'***REMOVED******REMOVED***,
    ('bg', gettext_noop('Bulgarian'***REMOVED******REMOVED***,
    ('be', gettext_noop('Belarusian'***REMOVED******REMOVED***,
    ('bn', gettext_noop('Bengali'***REMOVED******REMOVED***,
    ('br', gettext_noop('Breton'***REMOVED******REMOVED***,
    ('bs', gettext_noop('Bosnian'***REMOVED******REMOVED***,
    ('ca', gettext_noop('Catalan'***REMOVED******REMOVED***,
    ('cs', gettext_noop('Czech'***REMOVED******REMOVED***,
    ('cy', gettext_noop('Welsh'***REMOVED******REMOVED***,
    ('da', gettext_noop('Danish'***REMOVED******REMOVED***,
    ('de', gettext_noop('German'***REMOVED******REMOVED***,
    ('dsb', gettext_noop('Lower Sorbian'***REMOVED******REMOVED***,
    ('el', gettext_noop('Greek'***REMOVED******REMOVED***,
    ('en', gettext_noop('English'***REMOVED******REMOVED***,
    ('en-au', gettext_noop('Australian English'***REMOVED******REMOVED***,
    ('en-gb', gettext_noop('British English'***REMOVED******REMOVED***,
    ('eo', gettext_noop('Esperanto'***REMOVED******REMOVED***,
    ('es', gettext_noop('Spanish'***REMOVED******REMOVED***,
    ('es-ar', gettext_noop('Argentinian Spanish'***REMOVED******REMOVED***,
    ('es-co', gettext_noop('Colombian Spanish'***REMOVED******REMOVED***,
    ('es-mx', gettext_noop('Mexican Spanish'***REMOVED******REMOVED***,
    ('es-ni', gettext_noop('Nicaraguan Spanish'***REMOVED******REMOVED***,
    ('es-ve', gettext_noop('Venezuelan Spanish'***REMOVED******REMOVED***,
    ('et', gettext_noop('Estonian'***REMOVED******REMOVED***,
    ('eu', gettext_noop('Basque'***REMOVED******REMOVED***,
    ('fa', gettext_noop('Persian'***REMOVED******REMOVED***,
    ('fi', gettext_noop('Finnish'***REMOVED******REMOVED***,
    ('fr', gettext_noop('French'***REMOVED******REMOVED***,
    ('fy', gettext_noop('Frisian'***REMOVED******REMOVED***,
    ('ga', gettext_noop('Irish'***REMOVED******REMOVED***,
    ('gd', gettext_noop('Scottish Gaelic'***REMOVED******REMOVED***,
    ('gl', gettext_noop('Galician'***REMOVED******REMOVED***,
    ('he', gettext_noop('Hebrew'***REMOVED******REMOVED***,
    ('hi', gettext_noop('Hindi'***REMOVED******REMOVED***,
    ('hr', gettext_noop('Croatian'***REMOVED******REMOVED***,
    ('hsb', gettext_noop('Upper Sorbian'***REMOVED******REMOVED***,
    ('hu', gettext_noop('Hungarian'***REMOVED******REMOVED***,
    ('ia', gettext_noop('Interlingua'***REMOVED******REMOVED***,
    ('id', gettext_noop('Indonesian'***REMOVED******REMOVED***,
    ('io', gettext_noop('Ido'***REMOVED******REMOVED***,
    ('is', gettext_noop('Icelandic'***REMOVED******REMOVED***,
    ('it', gettext_noop('Italian'***REMOVED******REMOVED***,
    ('ja', gettext_noop('Japanese'***REMOVED******REMOVED***,
    ('ka', gettext_noop('Georgian'***REMOVED******REMOVED***,
    ('kk', gettext_noop('Kazakh'***REMOVED******REMOVED***,
    ('km', gettext_noop('Khmer'***REMOVED******REMOVED***,
    ('kn', gettext_noop('Kannada'***REMOVED******REMOVED***,
    ('ko', gettext_noop('Korean'***REMOVED******REMOVED***,
    ('lb', gettext_noop('Luxembourgish'***REMOVED******REMOVED***,
    ('lt', gettext_noop('Lithuanian'***REMOVED******REMOVED***,
    ('lv', gettext_noop('Latvian'***REMOVED******REMOVED***,
    ('mk', gettext_noop('Macedonian'***REMOVED******REMOVED***,
    ('ml', gettext_noop('Malayalam'***REMOVED******REMOVED***,
    ('mn', gettext_noop('Mongolian'***REMOVED******REMOVED***,
    ('mr', gettext_noop('Marathi'***REMOVED******REMOVED***,
    ('my', gettext_noop('Burmese'***REMOVED******REMOVED***,
    ('nb', gettext_noop('Norwegian Bokm√•l'***REMOVED******REMOVED***,
    ('ne', gettext_noop('Nepali'***REMOVED******REMOVED***,
    ('nl', gettext_noop('Dutch'***REMOVED******REMOVED***,
    ('nn', gettext_noop('Norwegian Nynorsk'***REMOVED******REMOVED***,
    ('os', gettext_noop('Ossetic'***REMOVED******REMOVED***,
    ('pa', gettext_noop('Punjabi'***REMOVED******REMOVED***,
    ('pl', gettext_noop('Polish'***REMOVED******REMOVED***,
    ('pt', gettext_noop('Portuguese'***REMOVED******REMOVED***,
    ('pt-br', gettext_noop('Brazilian Portuguese'***REMOVED******REMOVED***,
    ('ro', gettext_noop('Romanian'***REMOVED******REMOVED***,
    ('ru', gettext_noop('Russian'***REMOVED******REMOVED***,
    ('sk', gettext_noop('Slovak'***REMOVED******REMOVED***,
    ('sl', gettext_noop('Slovenian'***REMOVED******REMOVED***,
    ('sq', gettext_noop('Albanian'***REMOVED******REMOVED***,
    ('sr', gettext_noop('Serbian'***REMOVED******REMOVED***,
    ('sr-latn', gettext_noop('Serbian Latin'***REMOVED******REMOVED***,
    ('sv', gettext_noop('Swedish'***REMOVED******REMOVED***,
    ('sw', gettext_noop('Swahili'***REMOVED******REMOVED***,
    ('ta', gettext_noop('Tamil'***REMOVED******REMOVED***,
    ('te', gettext_noop('Telugu'***REMOVED******REMOVED***,
    ('th', gettext_noop('Thai'***REMOVED******REMOVED***,
    ('tr', gettext_noop('Turkish'***REMOVED******REMOVED***,
    ('tt', gettext_noop('Tatar'***REMOVED******REMOVED***,
    ('udm', gettext_noop('Udmurt'***REMOVED******REMOVED***,
    ('uk', gettext_noop('Ukrainian'***REMOVED******REMOVED***,
    ('ur', gettext_noop('Urdu'***REMOVED******REMOVED***,
    ('vi', gettext_noop('Vietnamese'***REMOVED******REMOVED***,
    ('zh-hans', gettext_noop('Simplified Chinese'***REMOVED******REMOVED***,
    ('zh-hant', gettext_noop('Traditional Chinese'***REMOVED******REMOVED***,
***REMOVED***

# Languages using BiDi (right-to-left***REMOVED*** layout
LANGUAGES_BIDI = ["he", "ar", "fa", "ur"***REMOVED***

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
***REMOVED***
LOCALE_PATHS = [***REMOVED***

# Settings for language cookie
LANGUAGE_COOKIE_NAME = 'django_language'
LANGUAGE_COOKIE_AGE = None
LANGUAGE_COOKIE_DOMAIN = None
LANGUAGE_COOKIE_PATH = '/'


# If you set this to True, Django will format dates, numbers and calendars
# according to user current locale.
USE_L10N = False

# Not-necessarily-technical managers of the site. They get broken link
# notifications and other various emails.
MANAGERS = ADMINS

# Default content type and charset to use for all HttpResponse objects, if a
# MIME type isn't manually specified. These are used to construct the
# Content-Type header.
DEFAULT_CONTENT_TYPE = 'text/html'
DEFAULT_CHARSET = 'utf-8'

# Encoding of files read from disk (template and initial SQL files***REMOVED***.
FILE_CHARSET = 'utf-8'

# Email address that error messages come from.
SERVER_EMAIL = 'root@localhost'

***REMOVED*** connection info. If left empty, will default to the dummy backend.
***REMOVED******REMOVED***

# Classes used to implement DB routing behavior.
DATABASE_ROUTERS = [***REMOVED***

# The email backend to use. For possible shortcuts see django.core.mail.
# The default is to use the SMTP backend.
# Third-party backends can be specified by providing a Python path
# to a module that defines an EmailBackend class.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Host for sending email.
EMAIL_HOST = 'localhost'

# Port for sending email.
EMAIL_PORT = 25

# Optional SMTP authentication information for EMAIL_HOST.
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None
EMAIL_TIMEOUT = None

# List of strings representing installed apps.
***REMOVED******REMOVED***

***REMOVED******REMOVED***

# Default email address to use for various automated correspondence from
# the site managers.
DEFAULT_FROM_EMAIL = 'webmaster@localhost'

# Subject-line prefix for email messages send with django.core.mail.mail_admins
# or ...mail_managers.  Make sure to include the trailing space.
EMAIL_SUBJECT_PREFIX = '[Django***REMOVED*** '

# Whether to append trailing slashes to URLs.
APPEND_SLASH = True

# Whether to prepend the "www." subdomain to URLs that don't have it.
PREPEND_WWW = False

# Override the server-derived value of SCRIPT_NAME
FORCE_SCRIPT_NAME = None

# List of compiled regular expression objects representing User-Agent strings
# that are not allowed to visit any page, systemwide. Use this for bad
# robots/crawlers. Here are a few examples:
#     import re
#     DISALLOWED_USER_AGENTS = [
#         re.compile(r'^NaverBot.*'***REMOVED***,
#         re.compile(r'^EmailSiphon.*'***REMOVED***,
#         re.compile(r'^SiteSucker.*'***REMOVED***,
#         re.compile(r'^sohu-search'***REMOVED***
#     ***REMOVED***
DISALLOWED_USER_AGENTS = [***REMOVED***

ABSOLUTE_URL_OVERRIDES = {***REMOVED***

# List of compiled regular expression objects representing URLs that need not
# be reported by BrokenLinkEmailsMiddleware. Here are a few examples:
#    import re
#    IGNORABLE_404_URLS = [
#        re.compile(r'^/apple-touch-icon.*\.png$'***REMOVED***,
#        re.compile(r'^/favicon.ico$***REMOVED***,
#        re.compile(r'^/robots.txt$***REMOVED***,
#        re.compile(r'^/phpmyadmin/***REMOVED***,
#        re.compile(r'\.(cgi|php|pl***REMOVED***$'***REMOVED***,
#    ***REMOVED***
IGNORABLE_404_URLS = [***REMOVED***

# A secret key for this particular Django installation. Used in secret-key
# hashing algorithms. Set this in your settings, or Django will complain
# loudly.
SECRET_KEY = ''

# Default file storage mechanism that holds media.
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = None

# URL that handles the static files served from STATIC_ROOT.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = None

# List of upload handler classes to be applied in order.
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
***REMOVED***

# Maximum size, in bytes, of a request before it will be streamed to the
# file system instead of into memory.
FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB

# Maximum size in bytes of request data (excluding file uploads***REMOVED*** that will be
# read before a SuspiciousOperation (RequestDataTooBig***REMOVED*** is raised.
DATA_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB

# Maximum number of GET/POST parameters that will be read before a
# SuspiciousOperation (TooManyFieldsSent***REMOVED*** is raised.
DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000

# Directory in which upload streamed files will be temporarily saved. A value of
# `None` will make Django use the operating system's default temporary directory
# (i.e. "/tmp" on *nix systems***REMOVED***.
FILE_UPLOAD_TEMP_DIR = None

# The numeric mode to set newly-uploaded files to. The value should be a mode
# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.
FILE_UPLOAD_PERMISSIONS = None

# The numeric mode to assign to newly-created directories, when uploading files.
# The value should be a mode as you'd pass to os.chmod;
# see https://docs.python.org/3/library/os.html#files-and-directories.
FILE_UPLOAD_DIRECTORY_PERMISSIONS = None

# Python module path where user will place custom format definition.
# The directory where this setting is pointing should contain subdirectories
# named as the locales, containing a formats.py file
# (i.e. "myproject.locale" for myproject/locale/en/formats.py etc. use***REMOVED***
FORMAT_MODULE_PATH = None

# Default formatting for date objects. See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
DATE_FORMAT = 'N j, Y'

# Default formatting for datetime objects. See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
DATETIME_FORMAT = 'N j, Y, P'

# Default formatting for time objects. See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
TIME_FORMAT = 'P'

# Default formatting for date objects when only the year and month are relevant.
# See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
YEAR_MONTH_FORMAT = 'F Y'

# Default formatting for date objects when only the month and day are relevant.
# See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
MONTH_DAY_FORMAT = 'F j'

# Default short formatting for date objects. See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
SHORT_DATE_FORMAT = 'm/d/Y'

# Default short formatting for datetime objects.
# See all available format strings here:
# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
SHORT_DATETIME_FORMAT = 'm/d/Y P'

# Default formats to be used when parsing dates from input boxes, in order
# See all available format string here:
# http://docs.python.org/library/datetime.html#strftime-behavior
# * Note that these format strings are different from the ones to display dates
DATE_INPUT_FORMATS = [
    '%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y',  # '2006-10-25', '10/25/2006', '10/25/06'
    '%b %d %Y', '%b %d, %Y',             # 'Oct 25 2006', 'Oct 25, 2006'
    '%d %b %Y', '%d %b, %Y',             # '25 Oct 2006', '25 Oct, 2006'
    '%B %d %Y', '%B %d, %Y',             # 'October 25 2006', 'October 25, 2006'
    '%d %B %Y', '%d %B, %Y',             # '25 October 2006', '25 October, 2006'
***REMOVED***

# Default formats to be used when parsing times from input boxes, in order
# See all available format string here:
# http://docs.python.org/library/datetime.html#strftime-behavior
# * Note that these format strings are different from the ones to display dates
TIME_INPUT_FORMATS = [
    '%H:%M:%S',     # '14:30:59'
    '%H:%M:%S.%f',  # '14:30:59.000200'
    '%H:%M',        # '14:30'
***REMOVED***

# Default formats to be used when parsing dates and times from input boxes,
# in order
# See all available format string here:
# http://docs.python.org/library/datetime.html#strftime-behavior
# * Note that these format strings are different from the ones to display dates
DATETIME_INPUT_FORMATS = [
    '%Y-%m-%d %H:%M:%S',     # '2006-10-25 14:30:59'
    '%Y-%m-%d %H:%M:%S.%f',  # '2006-10-25 14:30:59.000200'
    '%Y-%m-%d %H:%M',        # '2006-10-25 14:30'
    '%Y-%m-%d',              # '2006-10-25'
    '%m/%d/%Y %H:%M:%S',     # '10/25/2006 14:30:59'
    '%m/%d/%Y %H:%M:%S.%f',  # '10/25/2006 14:30:59.000200'
    '%m/%d/%Y %H:%M',        # '10/25/2006 14:30'
    '%m/%d/%Y',              # '10/25/2006'
    '%m/%d/%y %H:%M:%S',     # '10/25/06 14:30:59'
    '%m/%d/%y %H:%M:%S.%f',  # '10/25/06 14:30:59.000200'
    '%m/%d/%y %H:%M',        # '10/25/06 14:30'
    '%m/%d/%y',              # '10/25/06'
***REMOVED***

# First day of week, to be used on calendars
# 0 means Sunday, 1 means Monday...
FIRST_DAY_OF_WEEK = 0

# Decimal separator symbol
DECIMAL_SEPARATOR = '.'

# Boolean that sets whether to add thousand separator when formatting numbers
USE_THOUSAND_SEPARATOR = False

# Number of digits that will be together, when splitting them by
# THOUSAND_SEPARATOR. 0 means no grouping, 3 means splitting by thousands...
NUMBER_GROUPING = 0

# Thousand separator symbol
THOUSAND_SEPARATOR = ','

# The tablespaces to use for each model when not specified otherwise.
DEFAULT_TABLESPACE = ''
DEFAULT_INDEX_TABLESPACE = ''

# Default X-Frame-Options header value
X_FRAME_OPTIONS = 'SAMEORIGIN'

USE_X_FORWARDED_HOST = False
USE_X_FORWARDED_PORT = False

# The Python dotted path to the WSGI application that Django's internal server
# (runserver***REMOVED*** will use. If `None`, the return value of
# 'django.core.wsgi.get_wsgi_application' is used, thus preserving the same
# behavior as previous versions of Django. Otherwise this should point to an
# actual WSGI application object.
WSGI_APPLICATION = None

# If your Django app is behind a proxy that sets a header to specify secure
# connections, AND that proxy ensures that user-submitted headers with the
# same name are ignored (so that people can't spoof it***REMOVED***, set this value to
# a tuple of (header_name, header_value***REMOVED***. For any requests that come in with
# that header/value, request.is_secure(***REMOVED*** will return True.
# WARNING! Only set this if you fully understand what you're doing. Otherwise,
# you may be opening yourself up to a security risk.
SECURE_PROXY_SSL_HEADER = None

##############
# MIDDLEWARE #
##############

# List of middleware to use. Order is important; in the request phase, these
# middleware will be applied in the order given, and in the response
# phase the middleware will be applied in reverse order.
MIDDLEWARE_CLASSES = [
***REMOVED***
***REMOVED***
***REMOVED***

MIDDLEWARE = None

############
# SESSIONS #
############

# Cache to store session data if using the cache session backend.
SESSION_CACHE_ALIAS = 'default'
# Cookie name. This can be whatever you want.
SESSION_COOKIE_NAME = 'sessionid'
# Age of cookie, in seconds (default: 2 weeks***REMOVED***.
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7 * 2
# A string like ".example.com", or None for standard domain cookie.
SESSION_COOKIE_DOMAIN = None
# Whether the session cookie should be secure (https:// only***REMOVED***.
SESSION_COOKIE_SECURE = False
# The path of the session cookie.
SESSION_COOKIE_PATH = '/'
# Whether to use the non-RFC standard httpOnly flag (IE, FF3+, others***REMOVED***
SESSION_COOKIE_HTTPONLY = True
# Whether to save the session data on every request.
SESSION_SAVE_EVERY_REQUEST = False
# Whether a user's session cookie expires when the Web browser is closed.
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# The module to store session data
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# Directory to store session files if using the file session module. If None,
# the backend will use a sensible default.
SESSION_FILE_PATH = None
# class to serialize session data
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

#########
# CACHE #
#########

# The cache backends to use.
CACHES = {
***REMOVED***
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
***REMOVED***
***REMOVED***
CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'default'

##################
# AUTHENTICATION #
##################

AUTH_USER_MODEL = 'auth.User'

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend'***REMOVED***

LOGIN_URL = '/accounts/login/'

LOGIN_REDIRECT_URL = '/accounts/profile/'

LOGOUT_REDIRECT_URL = None

# The number of days a password reset link is valid for
PASSWORD_RESET_TIMEOUT_DAYS = 3

# the first hasher in this list is the preferred algorithm.  any
# password using different algorithms will be converted automatically
# upon login
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
***REMOVED***

***REMOVED******REMOVED***

###########
# SIGNING #
###########

SIGNING_BACKEND = 'django.core.signing.TimestampSigner'

########
# CSRF #
########

# Dotted path to callable to be used as view when a request is
# rejected by the CSRF middleware.
CSRF_FAILURE_VIEW = 'django.views.csrf.csrf_failure'

# Settings for CSRF cookie.
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_COOKIE_AGE = 60 * 60 * 24 * 7 * 52
CSRF_COOKIE_DOMAIN = None
CSRF_COOKIE_PATH = '/'
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_HTTPONLY = False
CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'
CSRF_TRUSTED_ORIGINS = [***REMOVED***

############
# MESSAGES #
############

# Class to use as messages backend
MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'

# Default values of MESSAGE_LEVEL and MESSAGE_TAGS are defined within
# django.contrib.messages to avoid imports in this settings file.

###########
# LOGGING #
###########

# The callable to use to configure logging
LOGGING_CONFIG = 'logging.config.dictConfig'

# Custom logging configuration.
LOGGING = {***REMOVED***

# Default exception reporter filter class used in case none has been
# specifically assigned to the HttpRequest instance.
DEFAULT_EXCEPTION_REPORTER_FILTER = 'django.views.debug.SafeExceptionReporterFilter'

###########
# TESTING #
###########

# The name of the class to use to run the test suite
TEST_RUNNER = 'django.test.runner.DiscoverRunner'

# Apps that don't need to be serialized at test database creation time
# (only apps with migrations are to start with***REMOVED***
TEST_NON_SERIALIZED_APPS = [***REMOVED***

############
# FIXTURES #
############

# The list of directories to search for fixtures
FIXTURE_DIRS = [***REMOVED***

###############
# STATICFILES #
###############

# A list of locations of additional static files
STATICFILES_DIRS = [***REMOVED***

# The default file storage backend used during the build process
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',
***REMOVED***

##############
# MIGRATIONS #
##############

# Migration module overrides for apps, by app label.
MIGRATION_MODULES = {***REMOVED***

#################
# SYSTEM CHECKS #
#################

# List of all issues generated by system checks that should be silenced. Light
# issues like warnings, infos or debugs will not generate a message. Silencing
# serious issues like errors and criticals does not result in hiding the
# message, but Django will not stop you from e.g. running server.
SILENCED_SYSTEM_CHECKS = [***REMOVED***

#######################
# SECURITY MIDDLEWARE #
#######################
SECURE_BROWSER_XSS_FILTER = False
SECURE_CONTENT_TYPE_NOSNIFF = False
SECURE_HSTS_INCLUDE_SUBDOMAINS = False
SECURE_HSTS_SECONDS = 0
SECURE_REDIRECT_EXEMPT = [***REMOVED***
SECURE_SSL_HOST = None
SECURE_SSL_REDIRECT = False
