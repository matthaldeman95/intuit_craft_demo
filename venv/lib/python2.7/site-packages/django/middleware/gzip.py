import re

from django.utils.cache import patch_vary_headers
from django.utils.deprecation import MiddlewareMixin
from django.utils.text import compress_sequence, compress_string

re_accepts_gzip = re.compile(r'\bgzip\b'***REMOVED***


class GZipMiddleware(MiddlewareMixin***REMOVED***:
    ***REMOVED***
    This middleware compresses content if the browser allows gzip compression.
    It sets the Vary header accordingly, so that caches will base their storage
    on the Accept-Encoding header.
    ***REMOVED***
    def process_response(self, request, response***REMOVED***:
        # It's not worth attempting to compress really short responses.
        if not response.streaming and len(response.content***REMOVED*** < 200:
            return response

        # Avoid gzipping if we've already got a content-encoding.
        if response.has_header('Content-Encoding'***REMOVED***:
            return response

        patch_vary_headers(response, ('Accept-Encoding',***REMOVED******REMOVED***

        ae = request.META.get('HTTP_ACCEPT_ENCODING', ''***REMOVED***
        if not re_accepts_gzip.search(ae***REMOVED***:
            return response

        if response.streaming:
            # Delete the `Content-Length` header for streaming content, because
            # we won't know the compressed size until we stream it.
            response.streaming_content = compress_sequence(response.streaming_content***REMOVED***
            del response['Content-Length'***REMOVED***
        else:
            # Return the compressed content only if it's actually shorter.
            compressed_content = compress_string(response.content***REMOVED***
            if len(compressed_content***REMOVED*** >= len(response.content***REMOVED***:
                return response
            response.content = compressed_content
            response['Content-Length'***REMOVED*** = str(len(response.content***REMOVED******REMOVED***

        if response.has_header('ETag'***REMOVED***:
            response['ETag'***REMOVED*** = re.sub('"$', ';gzip"', response['ETag'***REMOVED******REMOVED***
        response['Content-Encoding'***REMOVED*** = 'gzip'

        return response
