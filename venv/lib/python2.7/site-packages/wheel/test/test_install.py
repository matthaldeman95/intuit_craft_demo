# Test wheel.
# The file has the following contents:
#   hello.pyd
#   hello/hello.py
#   hello/__init__.py
#   test-1.0.data/data/hello.dat
#   test-1.0.data/headers/hello.dat
#   test-1.0.data/scripts/hello.sh
#   test-1.0.dist-info/WHEEL
#   test-1.0.dist-info/METADATA
#   test-1.0.dist-info/RECORD
# The root is PLATLIB
# So, some in PLATLIB, and one in each of DATA, HEADERS and SCRIPTS.

import wheel.tool
import wheel.pep425tags
from wheel.install import WheelFile
from tempfile import mkdtemp
import shutil
***REMOVED***

THISDIR = os.path.dirname(__file__***REMOVED***
TESTWHEEL = os.path.join(THISDIR, 'test-1.0-py2.py3-none-win32.whl'***REMOVED***

def check(*path***REMOVED***:
    return os.path.exists(os.path.join(*path***REMOVED******REMOVED***

def test_install(***REMOVED***:
    tempdir = mkdtemp(***REMOVED***
    def get_supported(***REMOVED***:
        return list(wheel.pep425tags.get_supported(***REMOVED******REMOVED*** + [('py3', 'none', 'win32'***REMOVED******REMOVED***
    whl = WheelFile(TESTWHEEL, context=get_supported***REMOVED***
    assert whl.supports_current_python(get_supported***REMOVED***
    ***REMOVED***
        locs = {***REMOVED***
        for key in ('purelib', 'platlib', 'scripts', 'headers', 'data'***REMOVED***:
            locs[key***REMOVED*** = os.path.join(tempdir, key***REMOVED***
            os.mkdir(locs[key***REMOVED******REMOVED***
        whl.install(overrides=locs***REMOVED***
        assert len(os.listdir(locs['purelib'***REMOVED******REMOVED******REMOVED*** == 0
        assert check(locs['platlib'***REMOVED***, 'hello.pyd'***REMOVED***
        assert check(locs['platlib'***REMOVED***, 'hello', 'hello.py'***REMOVED***
        assert check(locs['platlib'***REMOVED***, 'hello', '__init__.py'***REMOVED***
        assert check(locs['data'***REMOVED***, 'hello.dat'***REMOVED***
        assert check(locs['headers'***REMOVED***, 'hello.dat'***REMOVED***
        assert check(locs['scripts'***REMOVED***, 'hello.sh'***REMOVED***
        assert check(locs['platlib'***REMOVED***, 'test-1.0.dist-info', 'RECORD'***REMOVED***
    finally:
        shutil.rmtree(tempdir***REMOVED***

def test_install_tool(***REMOVED***:
    ***REMOVED***Slightly improve coverage of wheel.install***REMOVED***
    wheel.tool.install([TESTWHEEL***REMOVED***, force=True, dry_run=True***REMOVED***

    