***REMOVED***
Tests for the bdist_wheel tag options (--python-tag, --universal, and
--plat-name***REMOVED***
***REMOVED***

import sys
import shutil
import pytest
import py.path
import tempfile
import subprocess

SETUP_PY = ***REMOVED***\
from setuptools import setup, Extension

setup(
    name="Test",
    version="1.0",
    author_email="author@example.com",
    py_modules=["test"***REMOVED***,
***REMOVED***ext_modules***REMOVED***
***REMOVED***
***REMOVED***

EXT_MODULES = "ext_modules=[Extension('_test', sources=['test.c'***REMOVED******REMOVED******REMOVED***,"

@pytest.fixture
def temp_pkg(request, ext=False***REMOVED***:
    tempdir = tempfile.mkdtemp(***REMOVED***
    def fin(***REMOVED***:
        shutil.rmtree(tempdir***REMOVED***
    request.addfinalizer(fin***REMOVED***
    temppath = py.path.local(tempdir***REMOVED***
    temppath.join('test.py'***REMOVED***.write('print("Hello, world"***REMOVED***'***REMOVED***
    if ext:
        temppath.join('test.c'***REMOVED***.write('#include <stdio.h>'***REMOVED***
        setup_py = SETUP_PY.format(ext_modules=EXT_MODULES***REMOVED***
    else:
        setup_py = SETUP_PY.format(ext_modules=''***REMOVED***
    temppath.join('setup.py'***REMOVED***.write(setup_py***REMOVED***
    return temppath

@pytest.fixture
def temp_ext_pkg(request***REMOVED***:
    return temp_pkg(request, ext=True***REMOVED***

def test_default_tag(temp_pkg***REMOVED***:
    subprocess.check_call([sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
            cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename == 'Test-1.0-py%s-none-any.whl' % (sys.version[0***REMOVED***,***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_explicit_tag(temp_pkg***REMOVED***:
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel', '--python-tag=py32'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py32-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_universal_tag(temp_pkg***REMOVED***:
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel', '--universal'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py2.py3-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_universal_beats_explicit_tag(temp_pkg***REMOVED***:
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel', '--universal', '--python-tag=py32'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py2.py3-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_universal_in_setup_cfg(temp_pkg***REMOVED***:
    temp_pkg.join('setup.cfg'***REMOVED***.write('[bdist_wheel***REMOVED***\nuniversal=1'***REMOVED***
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py2.py3-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_pythontag_in_setup_cfg(temp_pkg***REMOVED***:
    temp_pkg.join('setup.cfg'***REMOVED***.write('[bdist_wheel***REMOVED***\npython_tag=py32'***REMOVED***
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py32-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_legacy_wheel_section_in_setup_cfg(temp_pkg***REMOVED***:
    temp_pkg.join('setup.cfg'***REMOVED***.write('[wheel***REMOVED***\nuniversal=1'***REMOVED***
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.startswith('Test-1.0-py2.py3-'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_plat_name_purepy(temp_pkg***REMOVED***:
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel', '--plat-name=testplat.pure'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.endswith('-testplat_pure.whl'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_plat_name_ext(temp_ext_pkg***REMOVED***:
    ***REMOVED***
        subprocess.check_call(
            [sys.executable, 'setup.py', 'bdist_wheel', '--plat-name=testplat.arch'***REMOVED***,
            cwd=str(temp_ext_pkg***REMOVED******REMOVED***
    except subprocess.CalledProcessError:
        pytest.skip("Cannot compile C Extensions"***REMOVED***
    dist_dir = temp_ext_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.endswith('-testplat_arch.whl'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_plat_name_purepy_in_setupcfg(temp_pkg***REMOVED***:
    temp_pkg.join('setup.cfg'***REMOVED***.write('[bdist_wheel***REMOVED***\nplat_name=testplat.pure'***REMOVED***
    subprocess.check_call(
        [sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
        cwd=str(temp_pkg***REMOVED******REMOVED***
    dist_dir = temp_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.endswith('-testplat_pure.whl'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'

def test_plat_name_ext_in_setupcfg(temp_ext_pkg***REMOVED***:
    temp_ext_pkg.join('setup.cfg'***REMOVED***.write('[bdist_wheel***REMOVED***\nplat_name=testplat.arch'***REMOVED***
    ***REMOVED***
        subprocess.check_call(
            [sys.executable, 'setup.py', 'bdist_wheel'***REMOVED***,
            cwd=str(temp_ext_pkg***REMOVED******REMOVED***
    except subprocess.CalledProcessError:
        pytest.skip("Cannot compile C Extensions"***REMOVED***
    dist_dir = temp_ext_pkg.join('dist'***REMOVED***
    assert dist_dir.check(dir=1***REMOVED***
    wheels = dist_dir.listdir(***REMOVED***
    assert len(wheels***REMOVED*** == 1
    assert wheels[0***REMOVED***.basename.endswith('-testplat_arch.whl'***REMOVED***
    assert wheels[0***REMOVED***.ext == '.whl'
