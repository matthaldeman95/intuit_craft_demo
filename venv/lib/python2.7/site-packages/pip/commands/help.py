from __future__ import absolute_import

from pip.basecommand import Command, SUCCESS
from pip.exceptions import CommandError


class HelpCommand(Command***REMOVED***:
    ***REMOVED***Show help for commands***REMOVED***
    name = 'help'
    usage = ***REMOVED***
      %prog <command>***REMOVED***
    summary = 'Show help for commands.'

    def run(self, options, args***REMOVED***:
        from pip.commands import commands_dict, get_similar_commands

        ***REMOVED***
            # 'pip help' with no args is handled by pip.__init__.parseopt(***REMOVED***
            cmd_name = args[0***REMOVED***  # the command we need help for
        except IndexError:
            return SUCCESS

        if cmd_name not in commands_dict:
            guess = get_similar_commands(cmd_name***REMOVED***

            msg = ['unknown command "%s"' % cmd_name***REMOVED***
            if guess:
                msg.append('maybe you meant "%s"' % guess***REMOVED***

            raise CommandError(' - '.join(msg***REMOVED******REMOVED***

        command = commands_dict[cmd_name***REMOVED***(***REMOVED***
        command.parser.print_help(***REMOVED***

        return SUCCESS
