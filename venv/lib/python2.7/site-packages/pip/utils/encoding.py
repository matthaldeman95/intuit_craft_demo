import codecs
import locale
import re


BOMS = [
    (codecs.BOM_UTF8, 'utf8'***REMOVED***,
    (codecs.BOM_UTF16, 'utf16'***REMOVED***,
    (codecs.BOM_UTF16_BE, 'utf16-be'***REMOVED***,
    (codecs.BOM_UTF16_LE, 'utf16-le'***REMOVED***,
    (codecs.BOM_UTF32, 'utf32'***REMOVED***,
    (codecs.BOM_UTF32_BE, 'utf32-be'***REMOVED***,
    (codecs.BOM_UTF32_LE, 'utf32-le'***REMOVED***,
***REMOVED***

ENCODING_RE = re.compile(b'coding[:=***REMOVED***\s*([-\w.***REMOVED***+***REMOVED***'***REMOVED***


def auto_decode(data***REMOVED***:
    ***REMOVED***Check a bytes string for a BOM to correctly detect the encoding

    Fallback to locale.getpreferredencoding(False***REMOVED*** like open(***REMOVED*** on Python3***REMOVED***
    for bom, encoding in BOMS:
        if data.startswith(bom***REMOVED***:
            return data[len(bom***REMOVED***:***REMOVED***.decode(encoding***REMOVED***
    # Lets check the first two lines as in PEP263
    for line in data.split(b'\n'***REMOVED***[:2***REMOVED***:
        if line[0:1***REMOVED*** == b'#' and ENCODING_RE.search(line***REMOVED***:
            encoding = ENCODING_RE.search(line***REMOVED***.groups(***REMOVED***[0***REMOVED***.decode('ascii'***REMOVED***
            return data.decode(encoding***REMOVED***
    return data.decode(locale.getpreferredencoding(False***REMOVED******REMOVED***
