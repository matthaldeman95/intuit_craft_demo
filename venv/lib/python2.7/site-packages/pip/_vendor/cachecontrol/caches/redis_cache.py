from __future__ import division

from datetime import datetime


def total_seconds(td***REMOVED***:
    ***REMOVED***Python 2.6 compatability***REMOVED***
    if hasattr(td, 'total_seconds'***REMOVED***:
        return td.total_seconds(***REMOVED***

    ms = td.microseconds
    secs = (td.seconds + td.days * 24 * 3600***REMOVED***
    return (ms + secs * 10**6***REMOVED*** / 10**6


class RedisCache(object***REMOVED***:

    def __init__(self, conn***REMOVED***:
        self.conn = conn

    def get(self, key***REMOVED***:
        return self.conn.get(key***REMOVED***

    def set(self, key, value, expires=None***REMOVED***:
        if not expires:
            self.conn.set(key, value***REMOVED***
        else:
            expires = expires - datetime.now(***REMOVED***
            self.conn.setex(key, total_seconds(expires***REMOVED***, value***REMOVED***

    def delete(self, key***REMOVED***:
        self.conn.delete(key***REMOVED***

    def clear(self***REMOVED***:
        ***REMOVED***Helper for clearing all the keys in a database. Use with
        caution!***REMOVED***
        for key in self.conn.keys(***REMOVED***:
            self.conn.delete(key***REMOVED***

    def close(self***REMOVED***:
        self.conn.disconnect(***REMOVED***
