# -*- coding: utf-8 -*-

#   __
#  /__***REMOVED***  _  _     _   _ _/   _
# / (   (- (/ (/ (- _***REMOVED***  /  _***REMOVED***
#          /

***REMOVED***
Requests HTTP library
~~~~~~~~~~~~~~~~~~~~~

Requests is an HTTP library, written in Python, for human beings. Basic GET
usage:

   >>> import requests
   >>> r = requests.get('https://www.python.org'***REMOVED***
   >>> r.status_code
   200
   >>> 'Python is a programming language' in r.content
   True

... or POST:

   >>> payload = dict(key1='value1', key2='value2'***REMOVED***
   >>> r = requests.post('http://httpbin.org/post', data=payload***REMOVED***
   >>> print(r.text***REMOVED***
   {
     ...
     "form": {
       "key2": "value2",
       "key1": "value1"
 ***REMOVED***
     ...
   ***REMOVED***

The other HTTP methods are supported - see `requests.api`. Full documentation
is at <http://python-requests.org>.

:copyright: (c***REMOVED*** 2016 by Kenneth Reitz.
:license: Apache 2.0, see LICENSE for more details.

***REMOVED***

__title__ = 'requests'
__version__ = '2.10.0'
__build__ = 0x021000
__author__ = 'Kenneth Reitz'
__license__ = 'Apache 2.0'
__copyright__ = 'Copyright 2016 Kenneth Reitz'

# Attempt to enable urllib3's SNI support, if possible
***REMOVED***
    from .packages.urllib3.contrib import pyopenssl
    pyopenssl.inject_into_urllib3(***REMOVED***
except ImportError:
    pass

import warnings

# urllib3's DependencyWarnings should be silenced.
from .packages.urllib3.exceptions import DependencyWarning
warnings.simplefilter('ignore', DependencyWarning***REMOVED***

from . import utils
from .models import Request, Response, PreparedRequest
from .api import request, get, head, post, patch, put, delete, options
from .sessions import session, Session
from .status_codes import codes
from .exceptions import (
    RequestException, Timeout, URLRequired,
    TooManyRedirects, HTTPError, ConnectionError,
    FileModeWarning, ConnectTimeout, ReadTimeout
***REMOVED***

# Set default logging handler to avoid "No handler found" warnings.
import logging
***REMOVED***  # Python 2.7+
    from logging import NullHandler
except ImportError:
    class NullHandler(logging.Handler***REMOVED***:
        def emit(self, record***REMOVED***:
            pass

logging.getLogger(__name__***REMOVED***.addHandler(NullHandler(***REMOVED******REMOVED***

import warnings

# FileModeWarnings go off per the default.
warnings.simplefilter('default', FileModeWarning, append=True***REMOVED***
