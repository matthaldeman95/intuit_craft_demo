# -*- coding: utf-8 -*-
#
# Copyright (C***REMOVED*** 2012 The Python Software Foundation.
# See LICENSE.txt and CONTRIBUTORS.txt.
#
***REMOVED***Backports for individual classes and functions.***REMOVED***

***REMOVED***
import sys

__all__ = ['cache_from_source', 'callable', 'fsencode'***REMOVED***


***REMOVED***
    from imp import cache_from_source
except ImportError:
    def cache_from_source(py_file, debug=__debug__***REMOVED***:
        ext = debug and 'c' or 'o'
        return py_file + ext


***REMOVED***
    callable = callable
except NameError:
    from collections import Callable

    def callable(obj***REMOVED***:
        return isinstance(obj, Callable***REMOVED***


***REMOVED***
    fsencode = os.fsencode
except AttributeError:
    def fsencode(filename***REMOVED***:
        if isinstance(filename, bytes***REMOVED***:
            return filename
        elif isinstance(filename, str***REMOVED***:
            return filename.encode(sys.getfilesystemencoding(***REMOVED******REMOVED***
        else:
            raise TypeError("expect bytes or str, not %s" %
                            type(filename***REMOVED***.__name__***REMOVED***
