from __future__ import absolute_import

import logging
import re

import pip
from pip.req import InstallRequirement
from pip.utils import get_installed_distributions
from pip._vendor import pkg_resources
from pip._vendor.packaging.utils import canonicalize_name


logger = logging.getLogger(__name__***REMOVED***


def freeze(
        requirement=None,
        find_links=None, local_only=None, user_only=None, skip_regex=None,
        default_vcs=None,
        isolated=False,
        wheel_cache=None,
        skip=(***REMOVED******REMOVED***:
    find_links = find_links or [***REMOVED***
    skip_match = None

    if skip_regex:
        skip_match = re.compile(skip_regex***REMOVED***.search

    dependency_links = [***REMOVED***

    for dist in pkg_resources.working_set:
        if dist.has_metadata('dependency_links.txt'***REMOVED***:
            dependency_links.extend(
                dist.get_metadata_lines('dependency_links.txt'***REMOVED***
            ***REMOVED***
    for link in find_links:
        if '#egg=' in link:
            dependency_links.append(link***REMOVED***
    for link in find_links:
        yield '-f %s' % link
    installations = {***REMOVED***
    for dist in get_installed_distributions(local_only=local_only,
                                            skip=(***REMOVED***,
                                            user_only=user_only***REMOVED***:
        req = pip.FrozenRequirement.from_dist(
            dist,
            dependency_links
        ***REMOVED***
        installations[req.name***REMOVED*** = req

    if requirement:
        with open(requirement***REMOVED*** as req_file:
            for line in req_file:
                if (not line.strip(***REMOVED*** or
                        line.strip(***REMOVED***.startswith('#'***REMOVED*** or
                        (skip_match and skip_match(line***REMOVED******REMOVED*** or
                        line.startswith((
                            '-r', '--requirement',
                            '-Z', '--always-unzip',
                            '-f', '--find-links',
                            '-i', '--index-url',
                            '--pre',
                            '--trusted-host',
                            '--process-dependency-links',
                            '--extra-index-url'***REMOVED******REMOVED******REMOVED***:
                    yield line.rstrip(***REMOVED***
                    continue

                if line.startswith('-e'***REMOVED*** or line.startswith('--editable'***REMOVED***:
                    if line.startswith('-e'***REMOVED***:
                        line = line[2:***REMOVED***.strip(***REMOVED***
                    else:
                        line = line[len('--editable'***REMOVED***:***REMOVED***.strip(***REMOVED***.lstrip('='***REMOVED***
                    line_req = InstallRequirement.from_editable(
                        line,
                        default_vcs=default_vcs,
                        isolated=isolated,
                        wheel_cache=wheel_cache,
                    ***REMOVED***
                else:
                    line_req = InstallRequirement.from_line(
                        line,
                        isolated=isolated,
                        wheel_cache=wheel_cache,
                    ***REMOVED***

                if not line_req.name:
                    logger.info(
                        "Skipping line because it's not clear what it "
                        "would install: %s",
                        line.strip(***REMOVED***,
                    ***REMOVED***
                    logger.info(
                        "  (add #egg=PackageName to the URL to avoid"
                        " this warning***REMOVED***"
                    ***REMOVED***
                elif line_req.name not in installations:
                    logger.warning(
                        "Requirement file contains %s, but that package is"
                        " not installed",
                        line.strip(***REMOVED***,
                    ***REMOVED***
                else:
                    yield str(installations[line_req.name***REMOVED******REMOVED***.rstrip(***REMOVED***
                    del installations[line_req.name***REMOVED***

        yield(
            '## The following requirements were added by '
            'pip freeze:'
        ***REMOVED***
    for installation in sorted(
            installations.values(***REMOVED***, key=lambda x: x.name.lower(***REMOVED******REMOVED***:
        if canonicalize_name(installation.name***REMOVED*** not in skip:
            yield str(installation***REMOVED***.rstrip(***REMOVED***
