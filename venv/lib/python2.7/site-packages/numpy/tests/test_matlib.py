from __future__ import division, absolute_import, print_function

import numpy as np
import numpy.matlib
from numpy.testing import assert_array_equal, assert_, run_module_suite

def test_empty(***REMOVED***:
    x = numpy.matlib.empty((2,***REMOVED******REMOVED***
    assert_(isinstance(x, np.matrix***REMOVED******REMOVED***
    assert_(x.shape, (1, 2***REMOVED******REMOVED***

def test_ones(***REMOVED***:
    assert_array_equal(numpy.matlib.ones((2, 3***REMOVED******REMOVED***,
                       np.matrix([[ 1.,  1.,  1.***REMOVED***,
                                 [ 1.,  1.,  1.***REMOVED******REMOVED******REMOVED******REMOVED***

    assert_array_equal(numpy.matlib.ones(2***REMOVED***, np.matrix([[ 1.,  1.***REMOVED******REMOVED******REMOVED******REMOVED***

def test_zeros(***REMOVED***:
    assert_array_equal(numpy.matlib.zeros((2, 3***REMOVED******REMOVED***,
                       np.matrix([[ 0.,  0.,  0.***REMOVED***,
                                 [ 0.,  0.,  0.***REMOVED******REMOVED******REMOVED******REMOVED***

    assert_array_equal(numpy.matlib.zeros(2***REMOVED***, np.matrix([[ 0.,  0.***REMOVED******REMOVED******REMOVED******REMOVED***

def test_identity(***REMOVED***:
    x = numpy.matlib.identity(2, dtype=np.int***REMOVED***
    assert_array_equal(x, np.matrix([[1, 0***REMOVED***, [0, 1***REMOVED******REMOVED******REMOVED******REMOVED***

def test_eye(***REMOVED***:
    x = numpy.matlib.eye(3, k=1, dtype=int***REMOVED***
    assert_array_equal(x, np.matrix([[ 0,  1,  0***REMOVED***,
                                     [ 0,  0,  1***REMOVED***,
                                     [ 0,  0,  0***REMOVED******REMOVED******REMOVED******REMOVED***

def test_rand(***REMOVED***:
    x = numpy.matlib.rand(3***REMOVED***
    # check matrix type, array would have shape (3,***REMOVED***
    assert_(x.ndim == 2***REMOVED***

def test_randn(***REMOVED***:
    x = np.matlib.randn(3***REMOVED***
    # check matrix type, array would have shape (3,***REMOVED***
    assert_(x.ndim == 2***REMOVED***

def test_repmat(***REMOVED***:
    a1 = np.arange(4***REMOVED***
    x = numpy.matlib.repmat(a1, 2, 2***REMOVED***
    y = np.array([[0, 1, 2, 3, 0, 1, 2, 3***REMOVED***,
                  [0, 1, 2, 3, 0, 1, 2, 3***REMOVED******REMOVED******REMOVED***
    assert_array_equal(x, y***REMOVED***


if __name__ == "__main__":
    run_module_suite(***REMOVED***
