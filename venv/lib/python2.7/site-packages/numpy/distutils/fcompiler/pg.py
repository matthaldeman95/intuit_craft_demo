# http://www.pgroup.com
from __future__ import division, absolute_import, print_function

from numpy.distutils.fcompiler import FCompiler
from sys import platform

compilers = ['PGroupFCompiler'***REMOVED***

class PGroupFCompiler(FCompiler***REMOVED***:

    compiler_type = 'pg'
    description = 'Portland Group Fortran Compiler'
    version_pattern =  r'\s*pg(f77|f90|hpf|fortran***REMOVED*** (?P<version>[\d.-***REMOVED***+***REMOVED***.*'

    if platform == 'darwin':
        executables = {
        'version_cmd'  : ["<F77>", "-V"***REMOVED***,
        'compiler_f77' : ["pgfortran", "-dynamiclib"***REMOVED***,
        'compiler_fix' : ["pgfortran", "-Mfixed", "-dynamiclib"***REMOVED***,
        'compiler_f90' : ["pgfortran", "-dynamiclib"***REMOVED***,
        'linker_so'    : ["libtool"***REMOVED***,
        'archiver'     : ["ar", "-cr"***REMOVED***,
        'ranlib'       : ["ranlib"***REMOVED***
    ***REMOVED***
        pic_flags = [''***REMOVED***
    else:
        executables = {
        'version_cmd'  : ["<F77>", "-V"***REMOVED***,
        'compiler_f77' : ["pgfortran"***REMOVED***,
        'compiler_fix' : ["pgfortran", "-Mfixed"***REMOVED***,
        'compiler_f90' : ["pgfortran"***REMOVED***,
        'linker_so'    : ["pgfortran", "-shared", "-fpic"***REMOVED***,
        'archiver'     : ["ar", "-cr"***REMOVED***,
        'ranlib'       : ["ranlib"***REMOVED***
    ***REMOVED***
        pic_flags = ['-fpic'***REMOVED***


    module_dir_switch = '-module '
    module_include_switch = '-I'

    def get_flags(self***REMOVED***:
        opt = ['-Minform=inform', '-Mnosecond_underscore'***REMOVED***
        return self.pic_flags + opt
    def get_flags_opt(self***REMOVED***:
        return ['-fast'***REMOVED***
    def get_flags_debug(self***REMOVED***:
        return ['-g'***REMOVED***

    if platform == 'darwin':
        def get_flags_linker_so(self***REMOVED***:
            return ["-dynamic", '-undefined', 'dynamic_lookup'***REMOVED***

    def runtime_library_dir_option(self, dir***REMOVED***:
        return '-R"%s"' % dir

if __name__ == '__main__':
    from distutils import log
    log.set_verbosity(2***REMOVED***
    from numpy.distutils.fcompiler import new_fcompiler
    compiler = new_fcompiler(compiler='pg'***REMOVED***
    compiler.customize(***REMOVED***
    print(compiler.get_version(***REMOVED******REMOVED***
