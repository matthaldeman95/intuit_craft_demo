from __future__ import division, absolute_import, print_function

from numpy.distutils.fcompiler import FCompiler

compilers = ['PathScaleFCompiler'***REMOVED***

class PathScaleFCompiler(FCompiler***REMOVED***:

    compiler_type = 'pathf95'
    description = 'PathScale Fortran Compiler'
    version_pattern =  r'PathScale\(TM\***REMOVED*** Compiler Suite: Version (?P<version>[\d.***REMOVED***+***REMOVED***'

    executables = {
        'version_cmd'  : ["pathf95", "-version"***REMOVED***,
        'compiler_f77' : ["pathf95", "-fixedform"***REMOVED***,
        'compiler_fix' : ["pathf95", "-fixedform"***REMOVED***,
        'compiler_f90' : ["pathf95"***REMOVED***,
        'linker_so'    : ["pathf95", "-shared"***REMOVED***,
        'archiver'     : ["ar", "-cr"***REMOVED***,
        'ranlib'       : ["ranlib"***REMOVED***
***REMOVED***
    pic_flags = ['-fPIC'***REMOVED***
    module_dir_switch = '-module ' # Don't remove ending space!
    module_include_switch = '-I'

    def get_flags_opt(self***REMOVED***:
        return ['-O3'***REMOVED***
    def get_flags_debug(self***REMOVED***:
        return ['-g'***REMOVED***

if __name__ == '__main__':
    from distutils import log
    log.set_verbosity(2***REMOVED***
    #compiler = PathScaleFCompiler(***REMOVED***
    from numpy.distutils.fcompiler import new_fcompiler
    compiler = new_fcompiler(compiler='pathf95'***REMOVED***
    compiler.customize(***REMOVED***
    print(compiler.get_version(***REMOVED******REMOVED***
