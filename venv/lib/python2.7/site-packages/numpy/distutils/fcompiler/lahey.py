from __future__ import division, absolute_import, print_function

***REMOVED***

from numpy.distutils.fcompiler import FCompiler

compilers = ['LaheyFCompiler'***REMOVED***

class LaheyFCompiler(FCompiler***REMOVED***:

    compiler_type = 'lahey'
    description = 'Lahey/Fujitsu Fortran 95 Compiler'
    version_pattern =  r'Lahey/Fujitsu Fortran 95 Compiler Release (?P<version>[^\s****REMOVED*******REMOVED***'

    executables = {
        'version_cmd'  : ["<F90>", "--version"***REMOVED***,
        'compiler_f77' : ["lf95", "--fix"***REMOVED***,
        'compiler_fix' : ["lf95", "--fix"***REMOVED***,
        'compiler_f90' : ["lf95"***REMOVED***,
        'linker_so'    : ["lf95", "-shared"***REMOVED***,
        'archiver'     : ["ar", "-cr"***REMOVED***,
        'ranlib'       : ["ranlib"***REMOVED***
    ***REMOVED***

    module_dir_switch = None  #XXX Fix me
    module_include_switch = None #XXX Fix me

    def get_flags_opt(self***REMOVED***:
        return ['-O'***REMOVED***
    def get_flags_debug(self***REMOVED***:
        return ['-g', '--chk', '--chkglobal'***REMOVED***
    def get_library_dirs(self***REMOVED***:
        opt = [***REMOVED***
        d = os.environ.get('LAHEY'***REMOVED***
        if d:
            opt.append(os.path.join(d, 'lib'***REMOVED******REMOVED***
        return opt
    def get_libraries(self***REMOVED***:
        opt = [***REMOVED***
        opt.extend(['fj9f6', 'fj9i6', 'fj9ipp', 'fj9e6'***REMOVED******REMOVED***
        return opt

if __name__ == '__main__':
    from distutils import log
    log.set_verbosity(2***REMOVED***
    from numpy.distutils.fcompiler import new_fcompiler
    compiler = new_fcompiler(compiler='lahey'***REMOVED***
    compiler.customize(***REMOVED***
    print(compiler.get_version(***REMOVED******REMOVED***
