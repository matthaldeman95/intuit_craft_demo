from __future__ import division, absolute_import, print_function

import sys
from numpy.distutils.fcompiler import FCompiler

compilers = ['NAGFCompiler'***REMOVED***

class NAGFCompiler(FCompiler***REMOVED***:

    compiler_type = 'nag'
    description = 'NAGWare Fortran 95 Compiler'
    version_pattern =  r'NAGWare Fortran 95 compiler Release (?P<version>[^\s***REMOVED*******REMOVED***'

    executables = {
        'version_cmd'  : ["<F90>", "-V"***REMOVED***,
        'compiler_f77' : ["f95", "-fixed"***REMOVED***,
        'compiler_fix' : ["f95", "-fixed"***REMOVED***,
        'compiler_f90' : ["f95"***REMOVED***,
        'linker_so'    : ["<F90>"***REMOVED***,
        'archiver'     : ["ar", "-cr"***REMOVED***,
        'ranlib'       : ["ranlib"***REMOVED***
    ***REMOVED***

    def get_flags_linker_so(self***REMOVED***:
        if sys.platform=='darwin':
            return ['-unsharedf95', '-Wl,-bundle,-flat_namespace,-undefined,suppress'***REMOVED***
        return ["-Wl,-shared"***REMOVED***
    def get_flags_opt(self***REMOVED***:
        return ['-O4'***REMOVED***
    def get_flags_arch(self***REMOVED***:
        version = self.get_version(***REMOVED***
        if version and version < '5.1':
            return ['-target=native'***REMOVED***
        else:
            return [''***REMOVED***
    def get_flags_debug(self***REMOVED***:
        return ['-g', '-gline', '-g90', '-nan', '-C'***REMOVED***

if __name__ == '__main__':
    from distutils import log
    log.set_verbosity(2***REMOVED***
    from numpy.distutils.fcompiler import new_fcompiler
    compiler = new_fcompiler(compiler='nag'***REMOVED***
    compiler.customize(***REMOVED***
    print(compiler.get_version(***REMOVED******REMOVED***
