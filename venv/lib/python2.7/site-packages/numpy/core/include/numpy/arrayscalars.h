#ifndef _NPY_ARRAYSCALARS_H_
#define _NPY_ARRAYSCALARS_H_

#ifndef _MULTIARRAYMODULE
typedef struct {
        PyObject_HEAD
        npy_bool obval;
***REMOVED*** PyBoolScalarObject;
#endif


typedef struct {
        PyObject_HEAD
        signed char obval;
***REMOVED*** PyByteScalarObject;


typedef struct {
        PyObject_HEAD
        short obval;
***REMOVED*** PyShortScalarObject;


typedef struct {
        PyObject_HEAD
        int obval;
***REMOVED*** PyIntScalarObject;


typedef struct {
        PyObject_HEAD
        long obval;
***REMOVED*** PyLongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_longlong obval;
***REMOVED*** PyLongLongScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned char obval;
***REMOVED*** PyUByteScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned short obval;
***REMOVED*** PyUShortScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned int obval;
***REMOVED*** PyUIntScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned long obval;
***REMOVED*** PyULongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_ulonglong obval;
***REMOVED*** PyULongLongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_half obval;
***REMOVED*** PyHalfScalarObject;


typedef struct {
        PyObject_HEAD
        float obval;
***REMOVED*** PyFloatScalarObject;


typedef struct {
        PyObject_HEAD
        double obval;
***REMOVED*** PyDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_longdouble obval;
***REMOVED*** PyLongDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_cfloat obval;
***REMOVED*** PyCFloatScalarObject;


typedef struct {
        PyObject_HEAD
        npy_cdouble obval;
***REMOVED*** PyCDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_clongdouble obval;
***REMOVED*** PyCLongDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        PyObject * obval;
***REMOVED*** PyObjectScalarObject;

typedef struct {
        PyObject_HEAD
        npy_datetime obval;
        PyArray_DatetimeMetaData obmeta;
***REMOVED*** PyDatetimeScalarObject;

typedef struct {
        PyObject_HEAD
        npy_timedelta obval;
        PyArray_DatetimeMetaData obmeta;
***REMOVED*** PyTimedeltaScalarObject;


typedef struct {
        PyObject_HEAD
        char obval;
***REMOVED*** PyScalarObject;

#define PyStringScalarObject PyStringObject
#define PyUnicodeScalarObject PyUnicodeObject

typedef struct {
        PyObject_VAR_HEAD
        char *obval;
        PyArray_Descr *descr;
        int flags;
        PyObject *base;
***REMOVED*** PyVoidScalarObject;

/* Macros
     Py<Cls><bitsize>ScalarObject
     Py<Cls><bitsize>ArrType_Type
   are defined in ndarrayobject.h
*/

#define PyArrayScalar_False ((PyObject ****REMOVED***(&(_PyArrayScalar_BoolValues[0***REMOVED******REMOVED******REMOVED******REMOVED***
#define PyArrayScalar_True ((PyObject ****REMOVED***(&(_PyArrayScalar_BoolValues[1***REMOVED******REMOVED******REMOVED******REMOVED***
#define PyArrayScalar_FromLong(i***REMOVED*** \
        ((PyObject ****REMOVED***(&(_PyArrayScalar_BoolValues[((i***REMOVED***!=0***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***
#define PyArrayScalar_RETURN_BOOL_FROM_LONG(i***REMOVED***                  \
        return Py_INCREF(PyArrayScalar_FromLong(i***REMOVED******REMOVED***, \
                PyArrayScalar_FromLong(i***REMOVED***
#define PyArrayScalar_RETURN_FALSE              \
        return Py_INCREF(PyArrayScalar_False***REMOVED***,  \
                PyArrayScalar_False
#define PyArrayScalar_RETURN_TRUE               \
        return Py_INCREF(PyArrayScalar_True***REMOVED***,   \
                PyArrayScalar_True

#define PyArrayScalar_New(cls***REMOVED*** \
        Py##cls##ArrType_Type.tp_alloc(&Py##cls##ArrType_Type, 0***REMOVED***
#define PyArrayScalar_VAL(obj, cls***REMOVED***             \
        ((Py##cls##ScalarObject ****REMOVED***obj***REMOVED***->obval
#define PyArrayScalar_ASSIGN(obj, cls, val***REMOVED*** \
        PyArrayScalar_VAL(obj, cls***REMOVED*** = val

#endif
