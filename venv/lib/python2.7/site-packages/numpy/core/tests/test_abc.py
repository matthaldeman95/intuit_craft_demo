from __future__ import division, absolute_import, print_function

from numpy.testing import TestCase, assert_, run_module_suite

import numbers
from numpy.core.numerictypes import sctypes

class ABC(TestCase***REMOVED***:
    def test_floats(self***REMOVED***:
        for t in sctypes['float'***REMOVED***:
            assert_(isinstance(t(***REMOVED***, numbers.Real***REMOVED***, 
                    "{0***REMOVED*** is not instance of Real".format(t.__name__***REMOVED******REMOVED***
            assert_(issubclass(t, numbers.Real***REMOVED***,
                    "{0***REMOVED*** is not subclass of Real".format(t.__name__***REMOVED******REMOVED***
            assert_(not isinstance(t(***REMOVED***, numbers.Rational***REMOVED***, 
                    "{0***REMOVED*** is instance of Rational".format(t.__name__***REMOVED******REMOVED***
            assert_(not issubclass(t, numbers.Rational***REMOVED***,
                    "{0***REMOVED*** is subclass of Rational".format(t.__name__***REMOVED******REMOVED***

    def test_complex(self***REMOVED***:
        for t in sctypes['complex'***REMOVED***:
            assert_(isinstance(t(***REMOVED***, numbers.Complex***REMOVED***, 
                    "{0***REMOVED*** is not instance of Complex".format(t.__name__***REMOVED******REMOVED***
            assert_(issubclass(t, numbers.Complex***REMOVED***,
                    "{0***REMOVED*** is not subclass of Complex".format(t.__name__***REMOVED******REMOVED***
            assert_(not isinstance(t(***REMOVED***, numbers.Real***REMOVED***, 
                    "{0***REMOVED*** is instance of Real".format(t.__name__***REMOVED******REMOVED***
            assert_(not issubclass(t, numbers.Real***REMOVED***,
                    "{0***REMOVED*** is subclass of Real".format(t.__name__***REMOVED******REMOVED***

    def test_int(self***REMOVED***:
        for t in sctypes['int'***REMOVED***:
            assert_(isinstance(t(***REMOVED***, numbers.Integral***REMOVED***, 
                    "{0***REMOVED*** is not instance of Integral".format(t.__name__***REMOVED******REMOVED***
            assert_(issubclass(t, numbers.Integral***REMOVED***,
                    "{0***REMOVED*** is not subclass of Integral".format(t.__name__***REMOVED******REMOVED***

    def test_uint(self***REMOVED***:
        for t in sctypes['uint'***REMOVED***:
            assert_(isinstance(t(***REMOVED***, numbers.Integral***REMOVED***, 
                    "{0***REMOVED*** is not instance of Integral".format(t.__name__***REMOVED******REMOVED***
            assert_(issubclass(t, numbers.Integral***REMOVED***,
                    "{0***REMOVED*** is not subclass of Integral".format(t.__name__***REMOVED******REMOVED***


if __name__ == "__main__":
    run_module_suite(***REMOVED***
