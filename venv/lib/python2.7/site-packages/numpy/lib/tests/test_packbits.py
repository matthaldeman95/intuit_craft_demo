from __future__ import division, absolute_import, print_function

import numpy as np
from numpy.testing import assert_array_equal, assert_equal, assert_raises


def test_packbits(***REMOVED***:
    # Copied from the docstring.
    a = [[[1, 0, 1***REMOVED***, [0, 1, 0***REMOVED******REMOVED***,
         [[1, 1, 0***REMOVED***, [0, 0, 1***REMOVED******REMOVED******REMOVED***
    for dtype in [np.bool, np.uint8, np.int***REMOVED***:
        arr = np.array(a, dtype=dtype***REMOVED***
        b = np.packbits(arr, axis=-1***REMOVED***
        assert_equal(b.dtype, np.uint8***REMOVED***
        assert_array_equal(b, np.array([[[160***REMOVED***, [64***REMOVED******REMOVED***, [[192***REMOVED***, [32***REMOVED******REMOVED******REMOVED******REMOVED******REMOVED***

    assert_raises(TypeError, np.packbits, np.array(a, dtype=float***REMOVED******REMOVED***


def test_unpackbits(***REMOVED***:
    # Copied from the docstring.
    a = np.array([[2***REMOVED***, [7***REMOVED***, [23***REMOVED******REMOVED***, dtype=np.uint8***REMOVED***
    b = np.unpackbits(a, axis=1***REMOVED***
    assert_equal(b.dtype, np.uint8***REMOVED***
    assert_array_equal(b, np.array([[0, 0, 0, 0, 0, 0, 1, 0***REMOVED***,
                                    [0, 0, 0, 0, 0, 1, 1, 1***REMOVED***,
                                    [0, 0, 0, 1, 0, 1, 1, 1***REMOVED******REMOVED******REMOVED******REMOVED***
