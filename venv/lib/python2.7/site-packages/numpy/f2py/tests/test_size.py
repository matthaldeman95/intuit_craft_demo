from __future__ import division, absolute_import, print_function

***REMOVED***

from numpy.testing import run_module_suite, assert_equal, dec
import util


def _path(*a***REMOVED***:
    return os.path.join(*((os.path.dirname(__file__***REMOVED***,***REMOVED*** + a***REMOVED******REMOVED***


class TestSizeSumExample(util.F2PyTest***REMOVED***:
    sources = [_path('src', 'size', 'foo.f90'***REMOVED******REMOVED***

    @dec.slow
    def test_all(self***REMOVED***:
        r = self.module.foo([[1, 2***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [3***REMOVED***, repr(r***REMOVED******REMOVED***

        r = self.module.foo([[1, 2***REMOVED***, [3, 4***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [3, 7***REMOVED***, repr(r***REMOVED******REMOVED***

        r = self.module.foo([[1, 2***REMOVED***, [3, 4***REMOVED***, [5, 6***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [3, 7, 11***REMOVED***, repr(r***REMOVED******REMOVED***

    @dec.slow
    def test_transpose(self***REMOVED***:
        r = self.module.trans([[1, 2***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [[1***REMOVED***, [2***REMOVED******REMOVED***, repr(r***REMOVED******REMOVED***

        r = self.module.trans([[1, 2, 3***REMOVED***, [4, 5, 6***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [[1, 4***REMOVED***, [2, 5***REMOVED***, [3, 6***REMOVED******REMOVED***, repr(r***REMOVED******REMOVED***

    @dec.slow
    def test_flatten(self***REMOVED***:
        r = self.module.flatten([[1, 2***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [1, 2***REMOVED***, repr(r***REMOVED******REMOVED***

        r = self.module.flatten([[1, 2, 3***REMOVED***, [4, 5, 6***REMOVED******REMOVED******REMOVED***
        assert_equal(r, [1, 2, 3, 4, 5, 6***REMOVED***, repr(r***REMOVED******REMOVED***

if __name__ == "__main__":
    run_module_suite(***REMOVED***
