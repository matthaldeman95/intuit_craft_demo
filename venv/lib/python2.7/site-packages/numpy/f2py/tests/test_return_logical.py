from __future__ import division, absolute_import, print_function

from numpy import array
from numpy.compat import long
from numpy.testing import run_module_suite, assert_, assert_raises, dec
import util


class TestReturnLogical(util.F2PyTest***REMOVED***:

    def check_function(self, t***REMOVED***:
        assert_(t(True***REMOVED*** == 1, repr(t(True***REMOVED******REMOVED******REMOVED***
        assert_(t(False***REMOVED*** == 0, repr(t(False***REMOVED******REMOVED******REMOVED***
        assert_(t(0***REMOVED*** == 0***REMOVED***
        assert_(t(None***REMOVED*** == 0***REMOVED***
        assert_(t(0.0***REMOVED*** == 0***REMOVED***
        assert_(t(0j***REMOVED*** == 0***REMOVED***
        assert_(t(1j***REMOVED*** == 1***REMOVED***
        assert_(t(234***REMOVED*** == 1***REMOVED***
        assert_(t(234.6***REMOVED*** == 1***REMOVED***
        assert_(t(long(234***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(234.6 + 3j***REMOVED*** == 1***REMOVED***
        assert_(t('234'***REMOVED*** == 1***REMOVED***
        assert_(t('aaa'***REMOVED*** == 1***REMOVED***
        assert_(t(''***REMOVED*** == 0***REMOVED***
        assert_(t([***REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t((***REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t({***REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t(t***REMOVED*** == 1***REMOVED***
        assert_(t(-234***REMOVED*** == 1***REMOVED***
        assert_(t(10 ** 100***REMOVED*** == 1***REMOVED***
        assert_(t([234***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t((234,***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array(234***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED******REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([[234***REMOVED******REMOVED******REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'b'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'h'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'i'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'l'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'f'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'd'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234 + 3j***REMOVED***, 'F'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array([234***REMOVED***, 'D'***REMOVED******REMOVED*** == 1***REMOVED***
        assert_(t(array(0***REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t(array([0***REMOVED******REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t(array([[0***REMOVED******REMOVED******REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t(array([0j***REMOVED******REMOVED******REMOVED*** == 0***REMOVED***
        assert_(t(array([1***REMOVED******REMOVED******REMOVED*** == 1***REMOVED***
        assert_raises(ValueError, t, array([0, 0***REMOVED******REMOVED******REMOVED***


class TestF77ReturnLogical(TestReturnLogical***REMOVED***:
    code = ***REMOVED***
       function t0(value***REMOVED***
         logical value
         logical t0
         t0 = value
       end
       function t1(value***REMOVED***
         logical*1 value
         logical*1 t1
         t1 = value
       end
       function t2(value***REMOVED***
         logical*2 value
         logical*2 t2
         t2 = value
       end
       function t4(value***REMOVED***
         logical*4 value
         logical*4 t4
         t4 = value
       end
c       function t8(value***REMOVED***
c         logical*8 value
c         logical*8 t8
c         t8 = value
c       end

       subroutine s0(t0,value***REMOVED***
         logical value
         logical t0
cf2py    intent(out***REMOVED*** t0
         t0 = value
       end
       subroutine s1(t1,value***REMOVED***
         logical*1 value
         logical*1 t1
cf2py    intent(out***REMOVED*** t1
         t1 = value
       end
       subroutine s2(t2,value***REMOVED***
         logical*2 value
         logical*2 t2
cf2py    intent(out***REMOVED*** t2
         t2 = value
       end
       subroutine s4(t4,value***REMOVED***
         logical*4 value
         logical*4 t4
cf2py    intent(out***REMOVED*** t4
         t4 = value
       end
c       subroutine s8(t8,value***REMOVED***
c         logical*8 value
c         logical*8 t8
cf2py    intent(out***REMOVED*** t8
c         t8 = value
c       end
    ***REMOVED***

    @dec.slow
    def test_all(self***REMOVED***:
        for name in "t0,t1,t2,t4,s0,s1,s2,s4".split(","***REMOVED***:
            self.check_function(getattr(self.module, name***REMOVED******REMOVED***


class TestF90ReturnLogical(TestReturnLogical***REMOVED***:
    suffix = ".f90"
    code = ***REMOVED***
module f90_return_logical
  contains
       function t0(value***REMOVED***
         logical :: value
         logical :: t0
         t0 = value
       end function t0
       function t1(value***REMOVED***
         logical(kind=1***REMOVED*** :: value
         logical(kind=1***REMOVED*** :: t1
         t1 = value
       end function t1
       function t2(value***REMOVED***
         logical(kind=2***REMOVED*** :: value
         logical(kind=2***REMOVED*** :: t2
         t2 = value
       end function t2
       function t4(value***REMOVED***
         logical(kind=4***REMOVED*** :: value
         logical(kind=4***REMOVED*** :: t4
         t4 = value
       end function t4
       function t8(value***REMOVED***
         logical(kind=8***REMOVED*** :: value
         logical(kind=8***REMOVED*** :: t8
         t8 = value
       end function t8

       subroutine s0(t0,value***REMOVED***
         logical :: value
         logical :: t0
!f2py    intent(out***REMOVED*** t0
         t0 = value
       end subroutine s0
       subroutine s1(t1,value***REMOVED***
         logical(kind=1***REMOVED*** :: value
         logical(kind=1***REMOVED*** :: t1
!f2py    intent(out***REMOVED*** t1
         t1 = value
       end subroutine s1
       subroutine s2(t2,value***REMOVED***
         logical(kind=2***REMOVED*** :: value
         logical(kind=2***REMOVED*** :: t2
!f2py    intent(out***REMOVED*** t2
         t2 = value
       end subroutine s2
       subroutine s4(t4,value***REMOVED***
         logical(kind=4***REMOVED*** :: value
         logical(kind=4***REMOVED*** :: t4
!f2py    intent(out***REMOVED*** t4
         t4 = value
       end subroutine s4
       subroutine s8(t8,value***REMOVED***
         logical(kind=8***REMOVED*** :: value
         logical(kind=8***REMOVED*** :: t8
!f2py    intent(out***REMOVED*** t8
         t8 = value
       end subroutine s8
end module f90_return_logical
    ***REMOVED***

    @dec.slow
    def test_all(self***REMOVED***:
        for name in "t0,t1,t2,t4,t8,s0,s1,s2,s4,s8".split(","***REMOVED***:
            self.check_function(getattr(self.module.f90_return_logical, name***REMOVED******REMOVED***

if __name__ == "__main__":
    run_module_suite(***REMOVED***
