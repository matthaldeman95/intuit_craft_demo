from __future__ import division, absolute_import, print_function

***REMOVED***
import math

import numpy as np
from numpy.testing import dec, assert_raises, assert_equal

import util


def _path(*a***REMOVED***:
    return os.path.join(*((os.path.dirname(__file__***REMOVED***,***REMOVED*** + a***REMOVED******REMOVED***


class TestIntentInOut(util.F2PyTest***REMOVED***:
    # Check that intent(in out***REMOVED*** translates as intent(inout***REMOVED***
    sources = [_path('src', 'regression', 'inout.f90'***REMOVED******REMOVED***

    @dec.slow
    def test_inout(self***REMOVED***:
        # non-contiguous should raise error
        x = np.arange(6, dtype=np.float32***REMOVED***[::2***REMOVED***
        assert_raises(ValueError, self.module.foo, x***REMOVED***

        # check values with contiguous array
        x = np.arange(3, dtype=np.float32***REMOVED***
        self.module.foo(x***REMOVED***
        assert_equal(x, [3, 1, 2***REMOVED******REMOVED***


if __name__ == "__main__":
    import nose
    nose.runmodule(***REMOVED***
