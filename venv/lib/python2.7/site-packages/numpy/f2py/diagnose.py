#!/usr/bin/env python
from __future__ import division, absolute_import, print_function

***REMOVED***
import sys
import tempfile


def run_command(cmd***REMOVED***:
    print('Running %r:' % (cmd***REMOVED******REMOVED***
    os.system(cmd***REMOVED***
    print('------'***REMOVED***


def run(***REMOVED***:
    _path = os.getcwd(***REMOVED***
    os.chdir(tempfile.gettempdir(***REMOVED******REMOVED***
    print('------'***REMOVED***
    print('os.name=%r' % (os.name***REMOVED******REMOVED***
    print('------'***REMOVED***
    print('sys.platform=%r' % (sys.platform***REMOVED******REMOVED***
    print('------'***REMOVED***
    print('sys.version:'***REMOVED***
    print(sys.version***REMOVED***
    print('------'***REMOVED***
    print('sys.prefix:'***REMOVED***
    print(sys.prefix***REMOVED***
    print('------'***REMOVED***
    print('sys.path=%r' % (':'.join(sys.path***REMOVED******REMOVED******REMOVED***
    print('------'***REMOVED***

    ***REMOVED***
        import numpy
        has_newnumpy = 1
    except ImportError:
        print('Failed to import new numpy:', sys.exc_info(***REMOVED***[1***REMOVED******REMOVED***
        has_newnumpy = 0

    ***REMOVED***
        from numpy.f2py import f2py2e
        has_f2py2e = 1
    except ImportError:
        print('Failed to import f2py2e:', sys.exc_info(***REMOVED***[1***REMOVED******REMOVED***
        has_f2py2e = 0

    ***REMOVED***
        import numpy.distutils
        has_numpy_distutils = 2
    except ImportError:
        ***REMOVED***
            import numpy_distutils
            has_numpy_distutils = 1
        except ImportError:
            print('Failed to import numpy_distutils:', sys.exc_info(***REMOVED***[1***REMOVED******REMOVED***
            has_numpy_distutils = 0

    if has_newnumpy:
        ***REMOVED***
            print('Found new numpy version %r in %s' %
                  (numpy.__version__, numpy.__file__***REMOVED******REMOVED***
        except Exception as msg:
            print('error:', msg***REMOVED***
            print('------'***REMOVED***

    if has_f2py2e:
        ***REMOVED***
            print('Found f2py2e version %r in %s' %
                  (f2py2e.__version__.version, f2py2e.__file__***REMOVED******REMOVED***
        except Exception as msg:
            print('error:', msg***REMOVED***
            print('------'***REMOVED***

    if has_numpy_distutils:
        ***REMOVED***
            if has_numpy_distutils == 2:
                print('Found numpy.distutils version %r in %r' % (
                    numpy.distutils.__version__,
                    numpy.distutils.__file__***REMOVED******REMOVED***
            else:
                print('Found numpy_distutils version %r in %r' % (
                    numpy_distutils.numpy_distutils_version.numpy_distutils_version,
                    numpy_distutils.__file__***REMOVED******REMOVED***
            print('------'***REMOVED***
        except Exception as msg:
            print('error:', msg***REMOVED***
            print('------'***REMOVED***
        ***REMOVED***
            if has_numpy_distutils == 1:
                print(
                    'Importing numpy_distutils.command.build_flib ...', end=' '***REMOVED***
                import numpy_distutils.command.build_flib as build_flib
                print('ok'***REMOVED***
                print('------'***REMOVED***
                ***REMOVED***
                    print(
                        'Checking availability of supported Fortran compilers:'***REMOVED***
                    for compiler_class in build_flib.all_compilers:
                        compiler_class(verbose=1***REMOVED***.is_available(***REMOVED***
                        print('------'***REMOVED***
                except Exception as msg:
                    print('error:', msg***REMOVED***
                    print('------'***REMOVED***
        except Exception as msg:
            print(
                'error:', msg, '(ignore it, build_flib is obsolute for numpy.distutils 0.2.2 and up***REMOVED***'***REMOVED***
            print('------'***REMOVED***
        ***REMOVED***
            if has_numpy_distutils == 2:
                print('Importing numpy.distutils.fcompiler ...', end=' '***REMOVED***
                import numpy.distutils.fcompiler as fcompiler
            else:
                print('Importing numpy_distutils.fcompiler ...', end=' '***REMOVED***
                import numpy_distutils.fcompiler as fcompiler
            print('ok'***REMOVED***
            print('------'***REMOVED***
            ***REMOVED***
                print('Checking availability of supported Fortran compilers:'***REMOVED***
                fcompiler.show_fcompilers(***REMOVED***
                print('------'***REMOVED***
            except Exception as msg:
                print('error:', msg***REMOVED***
                print('------'***REMOVED***
        except Exception as msg:
            print('error:', msg***REMOVED***
            print('------'***REMOVED***
        ***REMOVED***
            if has_numpy_distutils == 2:
                print('Importing numpy.distutils.cpuinfo ...', end=' '***REMOVED***
                from numpy.distutils.cpuinfo import cpuinfo
                print('ok'***REMOVED***
                print('------'***REMOVED***
            else:
                ***REMOVED***
                    print(
                        'Importing numpy_distutils.command.cpuinfo ...', end=' '***REMOVED***
                    from numpy_distutils.command.cpuinfo import cpuinfo
                    print('ok'***REMOVED***
                    print('------'***REMOVED***
                except Exception as msg:
                    print('error:', msg, '(ignore it***REMOVED***'***REMOVED***
                    print('Importing numpy_distutils.cpuinfo ...', end=' '***REMOVED***
                    from numpy_distutils.cpuinfo import cpuinfo
                    print('ok'***REMOVED***
                    print('------'***REMOVED***
            cpu = cpuinfo(***REMOVED***
            print('CPU information:', end=' '***REMOVED***
            for name in dir(cpuinfo***REMOVED***:
                if name[0***REMOVED*** == '_' and name[1***REMOVED*** != '_' and getattr(cpu, name[1:***REMOVED******REMOVED***(***REMOVED***:
                    print(name[1:***REMOVED***, end=' '***REMOVED***
            print('------'***REMOVED***
        except Exception as msg:
            print('error:', msg***REMOVED***
            print('------'***REMOVED***
    os.chdir(_path***REMOVED***
if __name__ == "__main__":
    run(***REMOVED***
