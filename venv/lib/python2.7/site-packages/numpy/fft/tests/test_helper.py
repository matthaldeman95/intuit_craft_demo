#!/usr/bin/env python
***REMOVED***Test functions for fftpack.helper module

Copied from fftpack.helper by Pearu Peterson, October 2005

***REMOVED***
from __future__ import division, absolute_import, print_function

import numpy as np
from numpy.testing import TestCase, run_module_suite, assert_array_almost_equal
from numpy import fft
from numpy import pi


class TestFFTShift(TestCase***REMOVED***:

    def test_definition(self***REMOVED***:
        x = [0, 1, 2, 3, 4, -4, -3, -2, -1***REMOVED***
        y = [-4, -3, -2, -1, 0, 1, 2, 3, 4***REMOVED***
        assert_array_almost_equal(fft.fftshift(x***REMOVED***, y***REMOVED***
        assert_array_almost_equal(fft.ifftshift(y***REMOVED***, x***REMOVED***
        x = [0, 1, 2, 3, 4, -5, -4, -3, -2, -1***REMOVED***
        y = [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4***REMOVED***
        assert_array_almost_equal(fft.fftshift(x***REMOVED***, y***REMOVED***
        assert_array_almost_equal(fft.ifftshift(y***REMOVED***, x***REMOVED***

    def test_inverse(self***REMOVED***:
        for n in [1, 4, 9, 100, 211***REMOVED***:
            x = np.random.random((n,***REMOVED******REMOVED***
            assert_array_almost_equal(fft.ifftshift(fft.fftshift(x***REMOVED******REMOVED***, x***REMOVED***

    def test_axes_keyword(self***REMOVED***:
        freqs = [[0, 1, 2***REMOVED***, [3, 4, -4***REMOVED***, [-3, -2, -1***REMOVED******REMOVED***
        shifted = [[-1, -3, -2***REMOVED***, [2, 0, 1***REMOVED***, [-4, 3, 4***REMOVED******REMOVED***
        assert_array_almost_equal(fft.fftshift(freqs, axes=(0, 1***REMOVED******REMOVED***, shifted***REMOVED***
        assert_array_almost_equal(fft.fftshift(freqs, axes=0***REMOVED***,
                fft.fftshift(freqs, axes=(0,***REMOVED******REMOVED******REMOVED***
        assert_array_almost_equal(fft.ifftshift(shifted, axes=(0, 1***REMOVED******REMOVED***, freqs***REMOVED***
        assert_array_almost_equal(fft.ifftshift(shifted, axes=0***REMOVED***,
                fft.ifftshift(shifted, axes=(0,***REMOVED******REMOVED******REMOVED***


class TestFFTFreq(TestCase***REMOVED***:

    def test_definition(self***REMOVED***:
        x = [0, 1, 2, 3, 4, -4, -3, -2, -1***REMOVED***
        assert_array_almost_equal(9*fft.fftfreq(9***REMOVED***, x***REMOVED***
        assert_array_almost_equal(9*pi*fft.fftfreq(9, pi***REMOVED***, x***REMOVED***
        x = [0, 1, 2, 3, 4, -5, -4, -3, -2, -1***REMOVED***
        assert_array_almost_equal(10*fft.fftfreq(10***REMOVED***, x***REMOVED***
        assert_array_almost_equal(10*pi*fft.fftfreq(10, pi***REMOVED***, x***REMOVED***


class TestRFFTFreq(TestCase***REMOVED***:

    def test_definition(self***REMOVED***:
        x = [0, 1, 2, 3, 4***REMOVED***
        assert_array_almost_equal(9*fft.rfftfreq(9***REMOVED***, x***REMOVED***
        assert_array_almost_equal(9*pi*fft.rfftfreq(9, pi***REMOVED***, x***REMOVED***
        x = [0, 1, 2, 3, 4, 5***REMOVED***
        assert_array_almost_equal(10*fft.rfftfreq(10***REMOVED***, x***REMOVED***
        assert_array_almost_equal(10*pi*fft.rfftfreq(10, pi***REMOVED***, x***REMOVED***


class TestIRFFTN(TestCase***REMOVED***:

    def test_not_last_axis_success(self***REMOVED***:
        ar, ai = np.random.random((2, 16, 8, 32***REMOVED******REMOVED***
        a = ar + 1j*ai

        axes = (-2,***REMOVED***

        # Should not raise error
        fft.irfftn(a, axes=axes***REMOVED***


if __name__ == "__main__":
    run_module_suite(***REMOVED***
